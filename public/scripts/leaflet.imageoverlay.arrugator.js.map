{"version":3,"file":"leaflet.imageoverlay.arrugator.js","sources":["../node_modules/glii/src/constantNames.mjs","../node_modules/glii/src/GliiFactory.mjs","../node_modules/glii/src/util/typeMap.mjs","../node_modules/glii/src/util/reverseTypeMap.mjs","../node_modules/glii/src/FrameBuffer/RenderBuffer.mjs","../node_modules/glii/src/FrameBuffer/FrameBuffer.mjs","../node_modules/glii/src/Texture.mjs","../node_modules/glii/src/Attribute/AbstractAttributeSet.mjs","../node_modules/glii/src/util/parseGlslType.mjs","../node_modules/glii/src/Attribute/StridedTypedArrays.mjs","../node_modules/glii/src/Attribute/SingleAttribute.mjs","../node_modules/glii/src/Indices/SequentialIndices.mjs","../node_modules/glii/src/Indices/IndexBuffer.mjs","../node_modules/glii/src/util/prettifyGlslError.mjs","../node_modules/glii/src/Program/WebGL1Program.mjs","../node_modules/arrugator/3rd-party/tinyqueue.mjs","../node_modules/arrugator/arrugator.mjs","../src/preSplitGrid.mjs","../src/leaflet.imageoverlay.arrugator.mjs"],"sourcesContent":["export default [\n\t/**\n\t * @class Glii\n\t * @section Buffer usage constants\n\t * @aka Buffer usage constant\n\t *\n\t * Used in the `usage` option of `IndexBuffer`s and `AbstractAttributeSet`s,\n\t * these allegedly tell the hardware which region of GPU memory the data should\n\t * be into.\n\t *\n\t * @property STATIC_DRAW: Number\n\t * Hints the hardware that the contents of the buffer are likely to be used often\n\t * and not change often.\n\t * @property DYNAMIC_DRAW: Number\n\t * Hints the hardware that the contents of the buffer are likely to be used often\n\t * and change often.\n\t * @property STREAM_DRAW: Number\n\t * Hints the hardware that the contents of the buffer are likely to not be used often.\n\t */\n\t\"STATIC_DRAW\",\n\t\"DYNAMIC_DRAW\",\n\t\"STREAM_DRAW\",\n\n\t/**\n\t * @section Data type constants\n\t * @aka Data type constant\n\t *\n\t * Used in the `type` option of `IndexBuffer`s.\n\t *\n\t * Note that `BindableAttribute`s infer the data type from the subclass of `TypedArray`.\n\t *\n\t * @property BYTE: Number; 8-bit integer, complement-2 signed\n\t * @property UNSIGNED_BYTE: Number; 8-bit integer, unsigned\n\t * @property SHORT: Number; 16-bit integer, complement-2 signed\n\t * @property UNSIGNED_SHORT: Number; 16-bit integer, unsigned\n\t * @property INT: Number; 32-bit integer, complement-2 signed\n\t * @property UNSIGNED_INT: Number; 32-bit integer, unsigned\n\t * @property FLOAT: Number; 32-bit IEEE754 floating point\n\t */\n\t\"BYTE\",\n\t\"UNSIGNED_BYTE\",\n\t\"SHORT\",\n\t\"UNSIGNED_SHORT\",\n\t\"INT\",\n\t\"UNSIGNED_INT\",\n\t\"FLOAT\",\n\n\t/**\n\t * @section Texture pixel type constants\n\t * @aka Texture pixel type constant\n\t *\n\t * Used in the `type` option of `Texture`s, for the `type` parameter of `texImage2D` calls.\n\t *\n\t * Note that, in WebGL1, some values are only valid when an extension is loaded. See\n\t * [`WEBGL_depth_texture`](https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture.html),\n\t * [`OES_texture_float`](https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float.html), and\n\t * [`OES_texture_half_float`](https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_half_float.html).\n\t *\n\t * @property UNSIGNED_BYTE: Number; 8-bit integer, unsigned\n\t * @property UNSIGNED_SHORT_5_6_5: Number; 5 red bits, 6 green bits, 5 blue bits.\n\t * @property UNSIGNED_SHORT_4_4_4_4: Number; 4 red bits, 4 green bits, 4 blue bits, 4 alpha bits.\n\t * @property UNSIGNED_SHORT_5_5_5_1: Number; 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit.\n\t * @property UNSIGNED_SHORT: Number; 16-bit integer, unsigned\n\t * @property UNSIGNED_INT: Number; 32-bit integer, unsigned\n\t * @property FLOAT: Number; 32-bit IEEE754 floating point\n\t */\n\n\t//\"UNSIGNED_BYTE\",\n\t\"UNSIGNED_SHORT_5_6_5\",\n\t\"UNSIGNED_SHORT_4_4_4_4\",\n\t\"UNSIGNED_SHORT_5_5_5_1\",\n\t//\"UNSIGNED_SHORT\",\n\t//\"UNSIGNED_INT\",\n\t//\"FLOAT\",\n\n\t/**\n\t * @section Draw mode constants\n\t * @aka Draw mode constant\n\t *\n\t * Used in the `drawMode` option of `SequentialIndices`, `IndexBuffer` and\n\t * `SparseIndices`. Determines how vertices (pointed by their indices) form draw\n\t * primitives.\n\t *\n\t * See [primitives in the OpenGL wiki](https://www.khronos.org/opengl/wiki/Primitive)\n\t * and [`drawElements` in Mozilla dev network](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawElements).\n\t *\n\t * @property POINTS: Number; Each vertex is drawn as a single point.\n\t * @property LINES: Number; Each set of two vertices is drawn as a line segment.\n\t * @property LINE_LOOP: Number\n\t * Each vertex connects to the next with a line segment. The last vertex connects to\n\t * the first.\n\t * @property LINE_STRIP: Number\n\t * Draw a line segment from the first vertex to each of the other vertices\n\t * @property TRIANGLES: Number\n\t * Each set of three vertices is drawn as a triangle (0-1-2, then 3-4-5, 6-7-8, etc)\n\t * @property TRIANGLE_STRIP: Number\n\t * Each group of three adjacent vertices is drawn as a triangle (0-1-2, then 2-3-4,\n\t * 3-4-5, etc). See [triangle strip on wikipedia](https://en.wikipedia.org/wiki/Triangle_strip)\n\t * @property TRIANGLE_FAN: Number\n\t * The first vertex plus each group of two adjacent vertices is drawn as a triangle.\n\t * See [triangle fan on wikipedia](https://en.wikipedia.org/wiki/Triangle_fan)\n\t */\n\t\"POINTS\",\n\t\"LINES\",\n\t\"LINE_LOOP\",\n\t\"LINE_STRIP\",\n\t\"TRIANGLES\",\n\t\"TRIANGLE_STRIP\",\n\t\"TRIANGLE_FAN\",\n\n\t/**\n\t * @section Texture format constants\n\t * @aka Texture format constant\n\t *\n\t * Determines the [image format](https://www.khronos.org/opengl/wiki/Image_Format)\n\t * of a `Texture`. Used in a `Texture`'s `format`&`internalFormat` options&properties.\n\t *\n\t * Some of these are only available when using a WebGL2 context. In some\n\t * cases, a few of the WebGL2-only formats are available when using a WebGL1\n\t * extension such as `OES_texture_float`.\n\t *\n\t * See https://registry.khronos.org/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\n\t *\n\t * @property RGB: Number; Texture holds red, green and blue components.\n\t * @property RGBA: Number; Texture holds red, green, blue and alpha components.\n\t * @property ALPHA: Number; Texture holds only an alpha component\n\t * @property LUMINANCE: Number\n\t * Texture holds only a luminance component. This effectively makes the texture greyscale.\n\t * @property LUMINANCE_ALPHA: Number\n\t * Texture holds luminance and alpha. This effectively makes the texture grayscale with\n\t * transparency.\n\t * @property RED: Number; WebGL2 only. Texture holds red component only.\n\t * @property RG: Number\n\t * WebGL2 only. Texture holds red and green components only.\n\t * @property RED_INTEGER\n\t * WebGL2 only. Texture holds integers in its red component.\n\t * @property RG_INTEGER\n\t * WebGL2 only. Texture holds integer in its red and green components.\n\t * @property RGB_INTEGER\n\t * WebGL2 only. Texture holds integer in its red, green and blue components.\n\t * @property RGBA_INTEGER\n\t * WebGL2 only. Texture holds integer in its red, green, blue and alpha components.\n\t *\n\t */\n\t\"ALPHA\",\n\t\"RGB\",\n\t\"RGBA\",\n\t\"LUMINANCE\",\n\t\"LUMINANCE_ALPHA\",\n\n\t\"RED\",\n\t\"RG\",\n\t\"RED_INTEGER\",\n\t\"RG_INTEGER\",\n\t\"RGB_INTEGER\",\n\t\"RGBA_INTEGER\",\n\n\t/**\n\t * @section Texture interpolation constants\n\t * @aka Texture interpolation constant\n\t *\n\t * Determines the behaviour of texel interpolation (when a fragment shader requests\n\t * a texel coordinate which falls between several texels). This is used in the\n\t * `minFilter` and `maxFilter` options&properties of `Texture`s.\n\t *\n\t * See [sampler filtering on the OpenGL wiki](https://www.khronos.org/opengl/wiki/Sampler_Object#Filtering)\n\t *\n\t * @property NEAREST: Number; Nearest-texel interpolation\n\t * @property LINEAR: Number; Linear interpolation between texels\n\t * @property NEAREST_MIPMAP_NEAREST: Number\n\t * Nearest-texel interpolation, in the nearest mipmap\n\t * @property LINEAR_MIPMAP_NEAREST: Number\n\t * Linear interpolation between texels, in the nearest mipmap\n\t * @property NEAREST_MIPMAP_LINEAR: Number\n\t * Nearest-texel interpolation, in a linearly-interpolatex mipmap\n\t * @property LINEAR_MIPMAP_LINEAR: Number\n\t * Linear interpolation between texels, in a linearly-interpolated mipmap\n\t */\n\t\"NEAREST\",\n\t\"LINEAR\",\n\t\"NEAREST_MIPMAP_NEAREST\",\n\t\"LINEAR_MIPMAP_NEAREST\",\n\t\"NEAREST_MIPMAP_LINEAR\",\n\t\"LINEAR_MIPMAP_LINEAR\",\n\n\t/**\n\t * @section Texture wrapping constants\n\t * @aka Texture wrapping constant\n\t *\n\t * Used in the `wrapS`/`wrapT` options of a `Texture`.\n\t *\n\t * Determines the behaviour of texel sampling when the requested texel is outside\n\t * the bounds of the `Texture` (i.e. when the texel coordinate is outside the\n\t * [0..1] range).\n\t *\n\t * See [https://learnopengl.com/Getting-started/Textures](https://learnopengl.com/Getting-started/Textures)\n\t * for an illustrative example.\n\t *\n\t * @property REPEAT: Number; Texture repeats.\n\t * @property CLAMP_TO_EDGE: Number\n\t * Texels from the edge of the texture are used outside.\n\t * @property MIRRORED_REPEAT: Number\n\t * Texture repeats but is mirrored on every odd occurence.\n\t */\n\t\"REPEAT\",\n\t\"CLAMP_TO_EDGE\",\n\t\"MIRRORED_REPEAT\",\n\n\t/**\n\t * @section Renderbuffer format constants\n\t * @aka Renderbuffer format constant\n\t *\n\t * Determines the internal format of a `RenderBuffer` (to be attached as\n\t * either/both the depth component and/or the stencil component of a\n\t * framebuffer).\n\t *\n\t * See [`renderBufferStorage`](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/renderbufferStorage)\n\t *\n\t * Some of these are only available when using a WebGL2 context. (In some\n\t * cases, a few of the WebGL2-only formats are available when using a WebGL1\n\t * extension such as `WEBGL_depth_texture`).\n\t *\n\t * @property RGBA4: Number;  4 red bits, 4 green bits, 4 blue bits 4 alpha bits.\n\t * @property RGB565: Number;  5 red bits, 6 green bits, 5 blue bits.\n\t * @property RGB5_A1: Number;  5 red bits, 5 green bits, 5 blue bits, 1 alpha bit.\n\t * @property DEPTH_COMPONENT16: Number; Renderbuffer holds 16 bits of depth\n\t * @property STENCIL_INDEX8: Number; Renderbuffer holds 8 bits of stencil\n\t * @property DEPTH_STENCIL: Number; Renderbuffer holds both depth and stencil\n\t * (implementation-dependant; can be assumed to hold *at least* 16 bits of depth\n\t * and 8 bits of stencil on WebGL1; in WebGL2 it should behave as `DEPTH24_STENCIL8`)\n\t * @property DEPTH_COMPONENT24: Number; Renderbuffer holds 24 bits of depth\n\t * (WebGL2 only).\n\t * @property DEPTH_COMPONENT32F: Number; Renderbuffer holds depth as 32-bit\n\t * floating point (WebGL2 only).\n\t * @property DEPTH24_STENCIL8: Number; Renderbuffer holds 24 bits of depth\n\t * and 8 bits of stencil (WebGL2 only).\n\t * @property DEPTH32F_STENCIL8: Number; Renderbuffer holds depth as 32-bit\n\t * @property R32I: Number; Renderbuffer holds depth as 32-bit signed\n\t * integer.\n\t */\n\t\"RGBA4\",\n\t\"RGB565\",\n\t\"RGB5_A1\",\n\n\t\"DEPTH_COMPONENT16\",\t//0x81A5\n\t\"STENCIL_INDEX8\",\t//0x8D48\n\t\"DEPTH_STENCIL\",\t//0x84F9\n\n\t\"DEPTH_COMPONENT24\",\n\t\"DEPTH_COMPONENT32F\",\n\t\"DEPTH24_STENCIL8\",\n\t\"DEPTH32F_STENCIL8\",\n\n\t\"R32I\",\n\n\n\t/**\n\t * @section Comparison constants\n\t * @aka Comparison constant\n\t *\n\t * Used in the `depth` option of `WebGL1Program`.\n\t *\n\t * Use `glii.ALWAYS` to disable depth testing. Otherwise, the most usual\n\t * value is `glii.LEQUAL` or `glii.LESS`, to render fragments with a lower\n\t * `z` component of their `gl_Position` (\"closer to the camera\") over fragments\n\t * with a higher `z`.\n\t *\n\t * See [depth testing in learnopengl.com](https://learnopengl.com/Advanced-OpenGL/Depth-testing).\n\t *\n\t * @property NEVER: Number; Always fails (i.e. shall drop all fragments).\n\t * @property ALWAYS: Number; Disables depth testing.\n\t * @property LESS: Number\n\t * Render fragments that have a lower `z` (\"closer to the camera\") over others.\n\t * @property LEQUAL: Number\n\t * As `LESS`, but also renders fragments with the same `z`.\n\t * @property GREATER: Number\n\t * Render fragments that have a higher `z` (\"further away from the camera\") over others.\n\t * @property GEQUAL: Number\n\t * As `GREATER`, but also renders fragments with the same `z`.\n\t * @property EQUAL: Number\n\t * Only render fragments with the same `z` as the depth buffer value.\n\t * @property NOTEQUAL: Number; Opposite of `EQUAL`.\n\t */\n\t\"NEVER\",\n\t\"ALWAYS\",\n\t\"LESS\",\n\t\"LEQUAL\",\n\t\"GREATER\",\n\t\"GEQUAL\",\n\t\"EQUAL\",\n\t\"NOTEQUAL\",\n\n\t/**\n\t * @section Blend equation constants\n\t * @aka Blend equation constant\n\t *\n\t * Used in the `blend` option of `WebGL1Program`.\n\t *\n\t * Defines which kind of arithmetic operation is applied to the RGB and Alpha\n\t * channels of fragments when they need to be blended together (i.e. when\n\t * two or more fragments from several triangles have the same `x,y` position\n\t * in the output framebuffer)\n\t *\n\t * See `WebGLRenderingContext`'s [`blendEquationSeparate`](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquationSeparate)\n\t *\n\t * @property FUNC_ADD: Number; source + destination\n\t * @property FUNC_SUBTRACT: Number; source - destination\n\t * @property FUNC_REVERSE_SUBTRACT: Number; destination - source\n\t * @property MIN: Number; Minimum of source and destination\n\t * @property MAX: Number; Maximum of source and destination\n\t */\n\t\"FUNC_ADD\",\n\t\"FUNC_SUBTRACT\",\n\t\"FUNC_REVERSE_SUBTRACT\",\n\t\"MIN\",\n\t\"MAX\",\n\n\t/**\n\t * @section Blend factor constants\n\t * @aka Blend factor constant\n\t *\n\t * Used in the `blend` option of `WebGL1Program`.\n\t *\n\t * Defines what factors shall multiply the RGB and Alpha components of\n\t * overlapping fragments just prior to applying the \"blend equation\" operation.\n\t *\n\t * See `WebGLRenderingContext`'s [`blendFuncSeparate`](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendFuncSeparate)\n\t * @property ZERO: Number; Multiplies all colors by 0.\n\t * @property ONE: Number; Multiplies all colors by 1.\n\t * @property SRC_COLOR: Number; Multiplies all colors by the source colors.\n\t * @property ONE_MINUS_SRC_COLOR: Number; Multiplies all colors by 1 minus each source color.\n\t * @property DST_COLOR: Number; Multiplies all colors by the destination color.\n\t * @property ONE_MINUS_DST_COLOR: Number; Multiplies all colors by 1 minus each destination color.\n\t * @property SRC_ALPHA: Number; Multiplies all colors by the source alpha color.\n\t * @property ONE_MINUS_SRC_ALPHA: Number; Multiplies all colors by 1 minus the source alpha color.\n\t * @property DST_ALPHA: Number; Multiplies all colors by the destination alpha color.\n\t * @property ONE_MINUS_DST_ALPHA: Number; Multiplies all colors by 1 minus the destination alpha color.\n\t * @property CONSTANT_COLOR: Number; Multiplies all colors by a constant color.\n\t * @property ONE_MINUS_CONSTANT_COLOR: Number; Multiplies all colors by 1 minus a constant color.\n\t * @property CONSTANT_ALPHA: Number; Multiplies all colors by a constant alpha value.\n\t * @property ONE_MINUS_CONSTANT_ALPHA: Number; Multiplies all colors by 1 minus a constant alpha value.\n\t * @property SRC_ALPHA_SATURATE: Number; Multiplies the RGB colors by the smaller of either the source alpha color or the value of 1 minus the destination alpha color. The alpha value is multiplied by 1.\n\t *\n\t */\n\t\"ZERO\",\n\t\"ONE\",\n\t\"SRC_COLOR\",\n\t\"ONE_MINUS_SRC_COLOR\",\n\t\"DST_COLOR\",\n\t\"ONE_MINUS_DST_COLOR\",\n\t\"SRC_ALPHA\",\n\t\"ONE_MINUS_SRC_ALPHA\",\n\t\"DST_ALPHA\",\n\t\"ONE_MINUS_DST_ALPHA\",\n\t\"CONSTANT_COLOR\",\n\t\"ONE_MINUS_CONSTANT_COLOR\",\n\t\"CONSTANT_ALPHA\",\n\t\"ONE_MINUS_CONSTANT_ALPHA\",\n\t\"SRC_ALPHA_SATURATE\",\n];\n","import constantNames from \"./constantNames.mjs\";\n\nconst factories = {};\n// Inspired by Leaflet's addInitHook()\n// `fact` must be a factory function that expects a `WebGLContext`,\n// optionally expects an instances of `GliiFactory`, and\n// returns a (wrapped) class constructor.\nexport function registerFactory(name, fact) {\n\tfactories[name] = fact;\n}\n\n/**\n * @class Glii\n * @aka GliiFactory\n * Glii core. Wraps the functionality of a `WebGLRenderingContext`.\n *\n * Contains wrappers for buffer, program, texture classes; also contains\n * a partial set of WebGL constants (only the ones that need to be\n * specified as options/parameters to Glii classes).\n *\n * @example\n * ```\n * // The Glii factory class is the default export of the Glii module;\n * // importing it looks like...\n * import Glii from \"path_to_glii/index.mjs\";\n *\n * // Create a Glii factory instance from a canvas...\n * const glii = new Glii(document.getElementById(\"some-canvas\"));\n *\n * // ...and use such instance to spawn stuff...\n * let pointIndices = new glii.IndexBuffer({\n * \t// ...using constants available in the Glii factory instance.\n * \tdrawMode: glii.POINTS\n * });\n * ```\n *\n * Note that all Glii classes except for `GliiFactory` are meant to be instantiated from\n * the following wrapped classes. In other words: do not try to instantiate e.g.\n * `new IndexBuffer(...)`, but rather create a `GliiFactory` instance\n * (usually named lowercase `glii` in the documentation and examples) and instantiate\n * `new glii.IndexBuffer(...)`.\n *\n * Idem for WebGL constants: most (if not all) the constants needed in class constructors\n * are copied into the namespace of `GliiFactory`, as shown above with `glii.POINTS`.\n *\n */\n\nexport default class GliiFactory {\n\t/**\n\t * @constructor GliiFactory(target: HTMLCanvasElement, contextAttributes?: Object)\n\t * Create a GL factory from a `HTMLCanvasElement`, and context attributes as per\n\t * [`getContext`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext)\n\t * @alternative\n\t * @constructor GliiFactory(target: WebGLRenderingContext)\n\t * Create a GL factory from an already instantiated `WebGLRenderingContext`\n\t * @alternative\n\t * @constructor GliiFactory(target: WebGL2RenderingContext)\n\t * Create a GL factory from an already instantiated `WebGL2RenderingContext`\n\t */\n\t/// TODO: Add another alternative, using only context attributes, which shall\n\t/// implicitly create the canvas.\n\tconstructor(target, contextAttributes) {\n\t\tif (!target || !target.constructor || !target.constructor.name) {\n\t\t\t// Happens on CI environments (gitlab CI)\n\t\t\tthrow new Error(\n\t\t\t\t\"Invalid target passed to GliiFactory constructor. Expected either a HTMLCanvasElement or a WebGLRenderingContext but got \" +\n\t\t\t\t\ttypeof target +\n\t\t\t\t\t\",\" +\n\t\t\t\t\tJSON.stringify(target) +\n\t\t\t\t\t\".\"\n\t\t\t);\n\t\t}\n\t\tswitch (target.constructor.name) {\n\t\t\tcase \"HTMLCanvasElement\":\n\t\t\t\tfunction get(name) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn target.getContext(name, contextAttributes);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.gl =\n\t\t\t\t\tget(\"webgl2\") ||\n\t\t\t\t\tget(\"webgl\") ||\n\t\t\t\t\tget(\"experimental-webgl\") ||\n\t\t\t\t\tget(\"webgl-experimental\");\n\n\t\t\t\tif (!this.gl) {\n\t\t\t\t\tthrow new Error(\"Glii could not create a WebGL context from canvas.\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"WebGLRenderingContext\":\n\t\t\tcase \"WebGL2RenderingContext\":\n\t\t\tcase \"bound WebGLRenderingContext\": // Happens on headless using \"gl\" module\n\t\t\tcase \"bound WebGL2RenderingContext\":\n\t\t\t\tthis.gl = target;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Invalid target passed to GliiFactory constructor. Expected either a HTMLCanvasElement or a WebGLRenderingContext but got an instance of \" +\n\t\t\t\t\t\ttarget.constructor.name +\n\t\t\t\t\t\t\".\"\n\t\t\t\t);\n\t\t}\n\n\t\tconst gl = this.gl;\n\n\t\tthis._isWebGL2 =\n\t\t\tgl.constructor.name === \"WebGL2RenderingContext\" ||\n\t\t\tgl.constructor.name === \"bound WebGL2RenderingContext\";\n\n\t\t// Call all individual factory functions, assign the class constructors to\n\t\t// properties of this instance.\n\t\tfor (let factName in factories) {\n\t\t\tthis[factName] = factories[factName](gl, this);\n\t\t}\n\n\t\t// Copy constants from the `WebGLRenderingContext`.\n\t\tfor (let i in constantNames) {\n\t\t\tconst name = constantNames[i];\n\t\t\tthis[name] = gl[name];\n\t\t}\n\n\t\tif (\"canvas\" in gl) {\n\t\t\tgl.canvas.addEventListener(\n\t\t\t\t\"webglcontextlost\",\n\t\t\t\t(ev) => {\n\t\t\t\t\tconsole.warn(\"glii has lost context\", ev);\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tgl.canvas.addEventListener(\n\t\t\t\t\"webglcontextrestored\",\n\t\t\t\t(ev) => {\n\t\t\t\t\tconsole.warn(\"glii lost context has been restored\", ev);\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t);\n\n\t\t\tconst resizeObserver = new ResizeObserver(() => {\n\t\t\t\tthis._drawingBufferSizeChanged = true;\n\t\t\t});\n\n\t\t\tresizeObserver.observe(gl.canvas);\n\t\t}\n\n\t\tthis.refreshDrawingBufferSize();\n\n\t\tthis._loadedExtensions = new Map();\n\n\t\t/// TODO: simulate context loss with gl.getExtension('WEBGL_lose_context').loseContext();\n\n\t\t// \t\t// Fetch some info from the context\n\t\t//\n\t\t// \t\t// This kinda assumes that, when given a WebGLRenderingContext/\n\t\t// \t\t// WebGL2RenderingContext, there have been no framebuffer shenanigans.\n\t\t// \t\tthis._defaultFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n\t\t// \t\tthis._defaultRenderbuffer = gl.getParameter(gl.RENDERBUFFER_BINDING);\n\t\t// \t\tthis._glslVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n\t\t//\n\t\t// \t\tconst attachments = [gl.COLOR_ATTACHMENT0, gl.DEPTH_ATTACHMENT, gl.STENCIL_ATTACHMENT];\n\t\t// \t\tconst pnames = [\n\t\t// \t\t\tgl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,\n\t\t// \t\t\tgl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,\n\t\t// \t\t\tgl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,\n\t\t// // \t\t\tgl.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\n\t\t// \t\t];\n\t\t//\n\t\t// // \t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t// \t\tthis._defaultAttachments = {};\n\t\t// \t\tfor (let att of attachments){\n\t\t// \t\t\tthis._defaultAttachments[att] = {};\n\t\t// \t\t\tfor (let i=0; i<0xFFFF; i++) {\n\t\t// // \t\t\t\tfor (let pname of pnames){\n\t\t// // \t\t\t\t\tconsole.log(att, pname);\n\t\t// // \t\t\t\t\tthis._defaultAttachments[att][pname] =\n\t\t// \t\t\t\tconst value =\n\t\t// // \t\t\t\t\t\tgl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, att, pname);\n\t\t// \t\t\t\t\tgl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, att, i);\n\t\t// // \t\t\t\t\t\tgl.getFramebufferAttachmentParameter(gl.FRAMEBUFFER, att, null);\n\t\t// \t\t\t\tif (value) {\n\t\t// \t\t\t\t\tconsole.log(att, i, value);\n\t\t// \t\t\t\t}\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t//\n\t\t// \t\tconsole.log('default framebuffer: ', this._defaultFramebuffer);\n\t\t// \t\tconsole.log('default renderbuffer: ', this._defaultRenderbuffer);\n\t\t// \t\tconsole.log('default attachments: ', this._defaultAttachments);\n\t\t// \t\tconsole.log('GLSL version: ', this._glslVersion);\n\t}\n\n\t/**\n\t * @method getSupportedExtensions(): Array of String\n\t * Returns the list of GL extensions supported in the running platform, as per\n\t * https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getSupportedExtensions.html\n\t */\n\tgetSupportedExtensions() {\n\t\tif (this._knownExtensions) {\n\t\t\treturn this._knownExtensions;\n\t\t}\n\t\treturn (this._knownExtensions = this.gl.getSupportedExtensions());\n\t}\n\n\t/**\n\t * @method isExtensionSupported(extName: String): Boolean\n\t * Returns whether the given extension is supported in the running platform\n\t */\n\tisExtensionSupported(extName) {\n\t\treturn this.getSupportedExtensions().includes(extName);\n\t}\n\n\t/**\n\t * @method loadExtension(ext: String): Object\n\t * Tries to load the given GL extension. Throws an error if the extension is\n\t * not supported.\n\t *\n\t * Returns the extension object, which may vary by extension.\n\t */\n\tloadExtension(extName) {\n\t\tlet ext = this._loadedExtensions.get(extName);\n\t\tif (ext) {\n\t\t\treturn ext;\n\t\t} else {\n\t\t\tif (!this.isExtensionSupported(extName)) {\n\t\t\t\tthrow new Error(`WebGL extension ${extName} is not supported`);\n\t\t\t}\n\t\t\text = this.gl.getExtension(extName);\n\t\t\tthis._loadedExtensions.set(extName, ext);\n\t\t\treturn ext;\n\t\t}\n\t}\n\n\t/**\n\t * @method isWebGL2(): Boolean\n\t * Returns whether the Glii instance is using a `WebGL2RenderingContext` or\n\t * not.\n\t */\n\tisWebGL2() {\n\t\treturn this._isWebGL2;\n\t}\n\n\t/**\n\t * @section Internal methods\n\t * @method refreshDrawingBufferSize(): Array of Number\n\t * Ensure that the size of the <canvas> linked to the `WebGLRenderingContext`\n\t * matches the size provided by `getClientRect()`.\n\t *\n\t * Meant to be called from a `WebGL1Program` right before fetching the drawing buffer\n\t * size. This technique should lower blinking when the `<canvas>` is resized.\n\t *\n\t * Returns the current canvas dimensions in `[width, height]` form.\n\t */\n\trefreshDrawingBufferSize() {\n\t\tif (this._drawingBufferSizeChanged) {\n\t\t\tconst canvas = this.gl.canvas;\n\t\t\tconst { width, height } = canvas.getClientRects()[0];\n\t\t\tthis._width = canvas.width = width;\n\t\t\tthis._height = canvas.height = height;\n\t\t\tthis._drawingBufferSizeChanged = false\n\t\t}\n\t\treturn [this._width, this._height];\n\t}\n\n\t/// TODO: lightweight event handler for resizing; uniforms might need to be re-set.\n}\n","// Maps each kind of TypedArray to the GL constant for the corresponding type.\n// Only includes kinds of JS TypedArray that have a counterpart in WebGL.\n\n// prettier-ignore\nexport default new Map([\n\t[Int8Array,         0x1400], // gl.BYTE\n\t[Uint8Array,        0x1401], // gl.UNSIGNED_BYTE\n\t[Uint8ClampedArray, 0x1401], // gl.UNSIGNED_BYTE\n\t[Int16Array,        0x1402], // gl.SHORT\n\t[Uint16Array,       0x1403], // gl.UNSIGNED_SHORT\n\t[Int32Array,        0x1404], // gl.INT\n\t[Uint32Array,       0x1405], // gl.UNSIGNED_INT\n\t[Float32Array,      0x1406], // gl.FLOAT\n]);\n\n/*\n * Notes:\n *\n * - For attributes, gl.INT and gl.UNSIGNED_INT can only\n * be used in WebGL2 (vertexAttrib*I*Pointer)\n *\n * - For index buffers, only unsigned types are valid.\n *\n * - While the rest of the code copies the GL constants from the WebGLRenderingContext,\n * this *assumes* the type constants are indeed constants. I always have this\n * fear that the actual integer values for these constants might change without notice.\n *\n */\n","// Akin to typeMap, but in reverse: maps GL constants to TypedArray prototypes intead.\n\n// Includes constants for texture pixel types as well (same kind of mapping, constant\n// to corresponding TypedArray prototype able to hold that kind of data).\n\n// prettier-ignore\nexport default new Map([\n\t[0x1400,\tInt8Array   ], // gl.BYTE\n\t[0x1401,\tUint8Array  ], // gl.UNSIGNED_BYTE\n\t[0x1402,\tInt16Array  ], // gl.SHORT\n\t[0x1402,\tInt16Array  ], // gl.SHORT\n\t[0x1403,\tUint16Array ], // gl.UNSIGNED_SHORT\n\t[0x1404,\tInt32Array  ], // gl.INT\n\t[0x1405,\tUint32Array ], // gl.UNSIGNED_INT\n\t[0x1406,\tFloat32Array], // gl.FLOAT\n\n\t[0x8033,\tUint16Array], // gl.UNSIGNED_SHORT_4_4_4_4\n\t[0x8034,\tUint16Array], // gl.UNSIGNED_SHORT_5_5_5_1\n\t[0x8363,\tUint16Array], // gl.UNSIGNED_SHORT_5_6_5\n\n\t[0x84FA,\tUint16Array], // ext.UNSIGNED_INT_24_8_WEBGL from WEBGL_depth_texture\n\n\t[0x8D61,\tUint16Array], // ext.HALF_FLOAT_OES from OES_texture_half_float\n]);\n","/**\n * @class RenderBuffer\n * @inherits AbstractFrameBufferAttachment\n *\n * Wraps a [`WebGLRenderbuffer`](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderbuffer)\n * and offers convenience methods.\n *\n * A `RenderBuffer` is most akin to an image: a rectangular collection of\n * pixels with `width`, `height` and a `internalFormat`. The main difference\n * between a `RenderBuffer` and a 2D `Texture` is the different `internalFormat`s.\n */\n\nimport { registerFactory } from \"../GliiFactory.mjs\";\n\nexport default class RenderBuffer {\n\t#width;\n\t#height;\n\t#gl;\n\t#rb;\n\t#internalFormat;\n\t#multisample;\n\n\tconstructor(gl, opts = {}) {\n\t\tthis.#gl = gl;\n\t\tthis.#rb = gl.createRenderbuffer();\n\n\t\t// @option size: Array of Number\n\t\t// Width and height of this `FrameBuffer`, in pixels, as a 2-component array.\n\t\t// If specified, it overrides the `width` and `height` options.\n\t\tif (\"size\" in opts) {\n\t\t\tif (\"width\" in opts || \"height\" in opts) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Expected either \"size\" or \"width\"/\"height\", but both were provided'\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.#width = opts.size[0];\n\t\t\tthis.#height = opts.size[1];\n\t\t} else {\n\t\t\t// @option width: Number = 256\n\t\t\t// Width of this `RenderBuffer`, in pixels.\n\t\t\tthis.#width = opts.width || 256;\n\n\t\t\t// @option height: Number = 256\n\t\t\t// Height of this `RenderBuffer`, in pixels.\n\t\t\tthis.#height = opts.height || 256;\n\t\t}\n\n\t\t// @option internalFormat: Renderbuffer format constant = gl.RGBA4\n\t\t// Internal format of this `RenderBuffer`, as per [`renderBufferStorage`](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/renderbufferStorage).\n\t\tthis.#internalFormat = opts.internalFormat || gl.RGBA4;\n\n\t\t// @option multisample: Number = 0\n\t\t// Number of samples to be used in the `RenderBuffer`. Set to higher values\n\t\t// for smoother antialiasing. Only has effect if the Glii context is WebGL2.\n\t\tthis.#multisample = opts.multisample || 0;\n\n\t\tthis.resize(this.#width, this.#height);\n\t}\n\n\t/**\n\t * @property rb: WebGLRenderbuffer\n\t * The underlying instance of `WebGLRenderBuffer`. Read-only.\n\t */\n\tget rb() {\n\t\tif (!this.#rb) {\n\t\t\tthrow new Error(\"RenderBuffer has been destroyed and cannot be used\");\n\t\t}\n\t\treturn this.#rb;\n\t}\n\n\t/**\n\t * @method resize(x: Number, y: Number): this\n\t * Sets a new size for the renderbuffer (destroying its data in the process).\n\t */\n\tresize(x, y) {\n\t\tthis.#width = x;\n\t\tthis.#height = y;\n\t\tconst gl = this.#gl;\n\n\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.#rb);\n\n\t\tif (\"renderbufferStorageMultisample\" in gl && this.#multisample > 1) {\n\t\t\tgl.renderbufferStorageMultisample(\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tthis.#multisample,\n\t\t\t\tthis.#internalFormat,\n\t\t\t\tthis.#width,\n\t\t\t\tthis.#height\n\t\t\t);\n\t\t} else {\n\t\t\tgl.renderbufferStorage(\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tthis.#internalFormat,\n\t\t\t\tthis.#width,\n\t\t\t\tthis.#height\n\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method destroy(): this\n\t * Tells WebGL to free resources associated with this `RenderBuffer`. Use\n\t * when the `RenderBuffer` won't be used anymore.\n\t *\n\t * After being destroyed, WebGL programs should not use any `FrameBuffer` which\n\t * points to the destroyed `RenderBuffer`.\n\t */\n\tdestroy() {\n\t\tthis.#gl.deleteRenderbuffer(this.#rb);\n\t\tthis.#rb = undefined;\n\t}\n}\n\n/**\n * @factory GliiFactory.RenderBuffer(options: RenderBuffer options)\n * @class Glii\n * @section Class wrappers\n * @property RenderBuffer(options: RenderBuffer options): Prototype of RenderBuffer\n * Wrapped `RenderBuffer` class\n */\nregisterFactory(\"RenderBuffer\", function (gl) {\n\treturn class WrappedRenderBuffer extends RenderBuffer {\n\t\tconstructor(opts) {\n\t\t\tsuper(gl, opts);\n\t\t}\n\t};\n});\n","import { default as reverseTypeMap } from \"../util/reverseTypeMap.mjs\";\n\n/**\n * @class FrameBuffer\n * @relationship compositionOf AbstractFrameBufferAttachment, 0..n, 1..n\n *\n * Wraps a [`WebGLFramebuffer`](https://developer.mozilla.org/en-US/docs/Web/API/WebGLFramebuffer)\n * and offers convenience methods.\n *\n * A `FrameBuffer` is a collection of `Texture`s/`RenderBuffer`s: (at least) one for\n * colour (RGBA), an optional one for depth and an optional one for stencil.\n *\n * In GL parlance, each of the `Texture`/`RenderBuffer`s that make up a `FrameBuffer`\n * is called an \"attachment\". Each attachment must have an `internalFormat` fitting its\n * colour/depth/stencil role.\n *\n * In any operations that allow a `FrameBuffer`, not giving one (or explicitly setting it\n * to `null`) shall work on the \"default\" framebuffer - in the usual case, this means an\n * internally-created framebuffer with the colour attachment linked to the `<canvas>`\n * that the GL context was created out of.\n *\n * Multiple colour attachments are only possible in WebGL2, or in WebGL1 when the\n * [`WEBGL_draw_buffers`](https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_draw_buffers) extension is available.\n *\n * Note that (in most combinations of drivers&hardware) the colour attachment(s) **must**\n * be textures using the `RGBA`/`UNSIGNED_BYTE` format+type combination.\n *\n * @example\n *\n * ```\n * var fb1 = new gliiFactory.FrameBuffer({\n * \tsize: new XY(1024, 1024),\n * \tcolor: [new gliiFactory.Texture( ... )],\n * \tstencil: new gliiFactory.RenderBuffer( ... ),\n * \tdepth: new gliiFactory.RenderBuffer( ... ),\n * });\n *\n * var size = new XY(1024, 1024);\n * var fb2 = new gliiFactory.FrameBuffer({\n * \tsize: size,\n * \tcolor: [\n * \t\tnew gliiFactory.Texture( size: size, ... ),\n * \t\tnew gliiFactory.Texture( size: size, ... )\n * \t],\n * \tstencil: false,\n * \tdepth: false,\n * });\n * ```\n */\n\n/// TODO: depth format for textures, only available with extension:\n/// https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_depth_texture\n\nimport { registerFactory } from \"../GliiFactory.mjs\";\nimport Texture from \"../Texture.mjs\";\nimport RenderBuffer from \"./RenderBuffer.mjs\";\n\nexport default class FrameBuffer {\n\t#gl;\n\t#fb;\n\n\t#width;\n\t#height;\n\n\t#colourAttachs;\n\t#depth;\n\t#stencil;\n\n\tconstructor(gl, opts = {}) {\n\t\tthis.#gl = gl;\n\t\tthis.#fb = gl.createFramebuffer();\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.#fb);\n\n\t\t// @section\n\t\t// @aka FrameBuffer options\n\t\t// @option size: Array of Number\n\t\t// Width and height of this `FrameBuffer`, in pixels, as a 2-component array.\n\t\t// If specified, it overrides the `width` and `height` options.\n\t\tif (\"size\" in opts) {\n\t\t\tif (\"width\" in opts || \"height\" in opts) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Expected either \"size\" or \"width\"/\"height\", but both were provided'\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.#width = opts.size[0];\n\t\t\tthis.#height = opts.size[1];\n\t\t} else {\n\t\t\t// @option width: Number = 256\n\t\t\t// Width of this `RenderBuffer`, in pixels.\n\t\t\tthis.#width = opts.width || 256;\n\n\t\t\t// @option height: Number = 256\n\t\t\t// Height of this `RenderBuffer`, in pixels.\n\t\t\tthis.#height = opts.height || 256;\n\t\t}\n\n\t\t// @option colour: Array of AbstractFrameBufferAttachment = []\n\t\t// An array of colour attachment(s) (either `Texture`s or `RenderBuffer`s)\n\t\tthis.#colourAttachs = opts.colour || opts.color || [];\n\t\t// \t\tthis.colourAttachZero = colourAttachs[0];\n\t\tthis.#colourAttachs.forEach((att, i) => {\n\t\t\tif (att instanceof Texture) {\n\t\t\t\tatt.getUnit();\n\t\t\t\tif (!att.isLoaded()) {\n\t\t\t\t\t// If the texture is empty (which means, no width/height set),\n\t\t\t\t\t// init it to a blank texture the same size as this FB.\n\t\t\t\t\t/// TODO: This will fail for pixel types UNSIGNED_SHORT_5_5_5_1 *et al*,\n\t\t\t\t\t/// since the size of the arrays and the components per pixel do not match.\n\t\t\t\t\t/// There is a need for an additional utility function to instantiate\n\t\t\t\t\t/// this kind of typed array.\n\t\t\t\t\tatt.texArray(\n\t\t\t\t\t\tthis.#width,\n\t\t\t\t\t\tthis.#height,\n\t\t\t\t\t\tnew (reverseTypeMap.get(att.type))(\n\t\t\t\t\t\t\tthis.#width * this.#height * att.getComponentsPerTexel()\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\t// gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat,this.#width, this.#height, 0, this.format, this.type, null);\n\t\t\t\t}\n\t\t\t\tgl.framebufferTexture2D(\n\t\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\t\tgl.COLOR_ATTACHMENT0 + i,\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\tatt.tex,\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t} else if (att instanceof RenderBuffer) {\n\t\t\t\tgl.framebufferRenderbuffer(\n\t\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\t\tgl.COLOR_ATTACHMENT0 + i,\n\t\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\t\tatt.rb\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\t// @option depth: RenderBuffer = false\n\t\t// A `RenderBuffer` for the depth attachment. Must have a depth-compatible `internalformat`.\n\t\tif (opts.depth && opts.depth instanceof RenderBuffer) {\n\t\t\tthis.#depth = opts.depth;\n\t\t\tgl.framebufferRenderbuffer(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.DEPTH_ATTACHMENT,\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\topts.depth.rb\n\t\t\t);\n\t\t}\n\n\t\t// @option stencil: RenderBuffer = false\n\t\t// A `RenderBuffer` for the stencil attachment. Must have a stencil-compatible `internalformat`.\n\t\tif (opts.stencil && opts.stencil instanceof RenderBuffer) {\n\t\t\tthis.#stencil = opts.stencil;\n\t\t\tgl.framebufferRenderbuffer(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.STENCIL_ATTACHMENT,\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\topts.stencil.rb\n\t\t\t);\n\t\t}\n\n\t\tthis.#checkStatus();\n\t}\n\n\t/**\n\t * @property fb: WebGLFramebuffer\n\t * The underlying instance of `WebGLFramebuffer`. Read-only.\n\t */\n\tget fb() {\n\t\treturn this.#fb;\n\t}\n\n\t/**\n\t * @property width: Number\n\t * The width of the framebuffer (and all its attachments), in pixels. Read-only.\n\t */\n\tget width() {\n\t\treturn this.#width;\n\t}\n\n\t/**\n\t * @property height: Number\n\t * The height of the framebuffer (and all its attachments), in pixels. Read-only.\n\t */\n\tget height() {\n\t\treturn this.#height;\n\t}\n\n\t/**\n\t * @method resize(x: Number, y: Number): this\n\t * Sets a new size for the framebuffer's attachments (textures/renderbuffers),\n\t * destroying their data in the process.\n\t */\n\tresize(x, y) {\n\t\tthis.#height = y;\n\t\tthis.#width = x;\n\n\t\tthis.#colourAttachs.forEach((att, _) => {\n\t\t\tatt.getUnit();\n\t\t\tatt.texArray(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tnew (reverseTypeMap.get(att.type))(\n\t\t\t\t\tthis.#width * this.#height * att.getComponentsPerTexel()\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\tif (this.#depth && this.#depth instanceof RenderBuffer) {\n\t\t\tthis.#depth.resize(x, y);\n\t\t}\n\n\t\tif (this.#stencil && this.#stencil instanceof RenderBuffer) {\n\t\t\tthis.#depth.resize(x, y);\n\t\t}\n\t\tthis.#checkStatus();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method destroy(): this\n\t * Tells WebGL to free resources associated with this framebuffer. Use\n\t * when the framebuffer won't be used anymore.\n\t *\n\t * After being destroyed, the framebuffer should not be used in a program.\n\t * Does not destroy any associated textures or renderbuffers.\n\t */\n\tdestroy() {\n\t\tthis.#gl.deleteFramebuffer(this.#fb);\n\t}\n\n\t#checkStatus() {\n\t\tconst gl = this.#gl;\n\t\tconst status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\t\tif (status === gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT) {\n\t\t\t// One reason for this is colour attachment being textures of a format/type\n\t\t\t// different than RGBA/UNSIGNED_BYTE. See\n\t\t\t// https://www.khronos.org/registry/webgl/extensions/WEBGL_draw_buffers/\n\t\t\tthrow new Error(\n\t\t\t\t`The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete.\nFor valid format/type combinations of framebuffer attachments, see https://www.khronos.org/registry/webgl/specs/1.0/#6.6 and https://www.khronos.org/registry/webgl/extensions/WEBGL_draw_buffers/`\n\t\t\t);\n\t\t} else if (status === gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT) {\n\t\t\tthrow new Error(\"There is no attachment.\");\n\t\t} else if (status === gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS) {\n\t\t\tthrow new Error(\"Height and width of the attachment are not the same.\");\n\t\t} else if (status === gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT) {\n\t\t\tthrow new Error(\"There is no attachment.\");\n\t\t} else if (status === gl.FRAMEBUFFER_UNSUPPORTED) {\n\t\t\tthrow new Error(\n\t\t\t\t\"The format of the attachment is not supported, or depth and stencil attachments are not the same renderbuffer.\"\n\t\t\t);\n\t\t} else if (status !== gl.FRAMEBUFFER_COMPLETE) {\n\t\t\tthrow new Error(\"FrameBuffer invalid \" + status);\n\t\t}\n\t}\n\n\t/**\n\t * @method readPixels: TypedArray\n\t * @param x?: Number\n\t * @param y?: Number\n\t * @param width?: Number\n\t * @return TypedArray\n\t *\n\t * Reads pixels from the colour attachment of the framebuffer, and returns a `TypedArray`\n\t * (e.g. a `Uint8Array` for 8-bit RGBA textures) with the data.\n\t *\n\t * Defaults to reading the entire colour attachment (from `0,0` to its witdh-height),\n\t * handles the datatypes, and creates a new `TypedArray` of the appropriate kind.\n\t *\n\t */\n\t/// TODO: How are float32 readbacks handled?? It seems that they neccesarily need an extension,\n\t/// but the documentation is scarce about the issue.\n\n\treadPixels(x, y, w, h) {\n\t\tconst gl = this.#gl;\n\n\t\tx = x || 0;\n\t\ty = y || 0;\n\t\tw = w || this.#width;\n\t\th = h || this.#height;\n\n\t\tconst attach = this.#colourAttachs[0];\n\t\tlet format, type, arrClass;\n\t\tlet itemsPerPx = 1;\n\n\t\tif (attach instanceof Texture) {\n\t\t\tif (\n\t\t\t\tattach.internalFormat === gl.RGBA ||\n\t\t\t\tattach.internalFormat === gl.RGB ||\n\t\t\t\tattach.internalFormat === gl.ALPHA\n\t\t\t) {\n\t\t\t\tformat = attach.internalFormat;\n\t\t\t\titemsPerPx = attach.getComponentsPerTexel();\n\t\t\t} else if (attach.internalFormat === gl.LUMINANCE) {\n\t\t\t\t/// Untested!!!\n\t\t\t\tformat = gl.RGB;\n\t\t\t\titemsPerPx = 3;\n\t\t\t} else if (attach.internalFormat === gl.R32F) {\n\t\t\t\t// Needs WebGL2, or float texture extensions\n\t\t\t\t// This reads 4 floats instead of 1 float per pixel. But works.\n\t\t\t\t// Using gl.RED fails for whatever reason.\n\t\t\t\tformat = gl.RGBA;\n\t\t\t\titemsPerPx = 4;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Pixels cannot be read back from texture: texture internal format must be R32F, RGB, RGBA, ALPHA, LUMINANCE or LUMINANCE_ALPHA (all other formats yet unsupported by glii)\"\n\t\t\t\t);\n\t\t\t}\n\n\t\t\ttype = attach.type || gl.UNSIGNED_BYTE;\n\t\t\tarrClass = reverseTypeMap.get(type);\n\n\t\t\tif (!arrClass) {\n\t\t\t\tthrow new Error(\"Unknown texture pixel type\");\n\t\t\t}\n\t\t} else {\n\t\t\t// attach instanceof RenderBuffer\n\t\t\tif (attach.internalFormat === gl.RGBA4) {\n\t\t\t\tformat = gl.RGBA;\n\t\t\t\ttype = gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\t\tarrClass = Uint16Array;\n\t\t\t} else if (attach.internalFormat === gl.RGB565) {\n\t\t\t\tformat = gl.RGB565;\n\t\t\t\ttype = gl.UNSIGNED_SHORT_5_6_5;\n\t\t\t\tarrClass = Uint16Array;\n\t\t\t} else if (attach.internalFormat === gl.RGB5_A1) {\n\t\t\t\tformat = gl.RGB5_A1;\n\t\t\t\ttype = gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\t\tarrClass = Uint16Array;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Pixels cannot be read back from renderbuffer: renderbuffer internal format must be RGBA4, RGB565 or RGB5_A1\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst pixelCount = w * h;\n\n\t\tconst out = new arrClass(pixelCount * itemsPerPx);\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.#fb);\n\n\t\tgl.readPixels(x, y, w, h, format, type, out);\n\t\treturn out;\n\t}\n}\n\n/**\n * @factory GliiFactory.FrameBuffer(options: FrameBuffer options)\n * @class Glii\n * @section Class wrappers\n * @property FrameBuffer(options: FrameBuffer options): Prototype of FrameBuffer\n * Wrapped `FrameBuffer` class\n */\nregisterFactory(\"FrameBuffer\", function (gl) {\n\treturn class WrappedFrameBuffer extends FrameBuffer {\n\t\tconstructor(opts) {\n\t\t\tsuper(gl, opts);\n\t\t}\n\t};\n});\n","import { default as typeMap } from \"./util/typeMap.mjs\";\nimport { default as reverseTypeMap } from \"./util/reverseTypeMap.mjs\";\nimport FrameBuffer from \"./FrameBuffer/FrameBuffer.mjs\";\n\n/// TODO: Subclass? from HTMLImageElement\n/// TODO: Subclass? from HTMLVideoElement\n\n/// TODO: pixelStorei, from\n/// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n/// (e.g. flip Y coordinate)\n\n/**\n * @class Texture\n * @inherits AbstractFrameBufferAttachment\n * Wraps a [`WebGLTexture`](https://developer.mozilla.org/docs/Web/API/WebGLTexture)\n * and offers convenience methods.\n *\n * Contrary to what one might think, a `Texture` has no implicit size. Its size\n * is (re-)defined on any full update (`texImage2D` or `linkRenderBuffer`).\n */\n\nimport { registerFactory } from \"./GliiFactory.mjs\";\n\nexport default class Texture {\n\t#gl;\n\t#tex;\n\n\tconstructor(gl, opts = {}) {\n\t\tthis.#gl = gl;\n\t\tthis.#tex = gl.createTexture();\n\n\t\t/**\n\t\t * @section\n\t\t * @aka Texture options\n\t\t * @option minFilter: Texture interpolation constant = gl.NEAREST\n\t\t * Initial value of the `minFilter` property\n\t\t * @option magFilter: Texture interpolation constant = gl.NEAREST\n\t\t * Initial value of the `magFilter` property\n\t\t * @option wrapS: Texture wrapping constant = gl.CLAMP_TO_EDGE\n\t\t * Initial value for the `wrapS` property\n\t\t * @option wrapT: Texture wrapping constant = gl.CLAMP_TO_EDGE\n\t\t * Initial value for the `wrapS` property\n\t\t * @option internalFormat: Texture format constant = gl.RGBA\n\t\t * Initial value for the `internalFormat` property\n\t\t * @option format: Texture format constant = gl.RGBA\n\t\t * Initial value for the `format` property\n\t\t * @option type: Texture type constant = gl.UNSIGNED_BYTE\n\t\t * Initial value for the `type` property\n\t\t */\n\n\t\t// Helper for caching bound textures and their active texture unit\n\t\tthis._unit = undefined;\n\n\t\t// Helper for LRU-ing texture units. Shall be (re-)set every time\n\t\t// this texture is promoted to an available unit\n\t\tthis._lastActive = performance.now();\n\n\t\t// @property minFilter: Texture interpolation constant = glii.NEAREST\n\t\t// Texture minification filter (or \"what to do when pixels in the texture\n\t\t// are smaller than pixels in the output image\")\n\t\tthis.minFilter = opts.minFilter || gl.NEAREST;\n\n\t\t// @property magFilter: Texture interpolation constant = glii.NEAREST\n\t\t// Texture magification filter (or \"what to do when pixels in the texture\n\t\t// are bigger than pixels in the output image\"). Cannot use mipmaps (as\n\t\t// mipmaps are always smaller than the texture).\n\t\tthis.magFilter = opts.magFilter || gl.NEAREST;\n\n\t\t// @property wrapS: Texture wrapping constant\n\t\t// Value for the `TEXTURE_WRAP_S` [texture parameter](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter) for any subsequent texture full updates\n\t\tthis.wrapS = opts.wrapS || gl.CLAMP_TO_EDGE;\n\n\t\t// @property wrapT: Texture wrapping constant\n\t\t// Value for the `TEXTURE_WRAP_T` [texture parameter](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter) for any subsequent texture full updates\n\t\tthis.wrapT = opts.wrapT || gl.CLAMP_TO_EDGE;\n\n\t\t// @property internalFormat: Texture format constant\n\t\t// Value for the `internalFormat` parameter for `texImage2D` calls.\n\t\tthis.internalFormat = opts.internalFormat || gl.RGBA;\n\n\t\t// @property format: Texture format constant\n\t\t// Value for the `format` parameter for `texImage2D` calls. in WebGL1, this must\n\t\t// be equal to `internalFormat`. For WebGL2, see\n\t\t// https://registry.khronos.org/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\n\t\tthis.format = opts.format || gl.RGBA;\n\n\t\t// @property type: Texture pixel type constant\n\t\t// Value for the `type` parameter for `texImage2D` calls.\n\t\tthis.type = opts.type || gl.UNSIGNED_BYTE;\n\n\t\t// Loaded flag, to let `FrameBuffer` know when the texture has to be init'd\n\t\t// with a specific width/height\n\t\tthis._isLoaded = false;\n\n\t\tthis.width = undefined;\n\t\tthis.height = undefined;\n\t}\n\n\t// Each element of this `WeakMap` is keyed by a `WebGLRenderingContext`, and its value\n\t// is a plain `Array` of `Texture`s.\n\tstatic _boundUnits = new WeakMap();\n\n\t/**\n\t * @property tex: WebGLTexture\n\t * The underlying instance of `WebGLTexture`. Read-only.\n\t */\n\tget tex() {\n\t\tif (!this.#tex) {\n\t\t\tthrow new Error(\"Texture has been destroyed and cannot be used\");\n\t\t}\n\t\treturn this.#tex;\n\t}\n\n\t/**\n\t * @section Internal methods\n\t * @method getUnit(): Number\n\t * Returns a the texture unit index (or \"name\" in GL parlance) that this texture\n\t * is bound to.\n\t *\n\t * Calling this method guarantees that the texture is bound into a valid unit,\n\t * and that that unit is the active one (until a number of other `Texture`s\n\t * call `getUnit()`, at least `MAX_COMBINED_TEXTURE_IMAGE_UNITS`)\n\t *\n\t * This might expel (unbind) the texture which was used the longest ago.\n\t */\n\tgetUnit() {\n\t\tthis._lastActive = performance.now();\n\t\tconst gl = this.#gl;\n\t\tif (this._unit !== undefined) {\n\t\t\tgl.activeTexture(gl.TEXTURE0 + this._unit);\n\t\t\t// \t\t\tconsole.log(\"Texture already bound to unit\", this._unit);\n\t\t\treturn this._unit;\n\t\t}\n\n\t\tif (!Texture._boundUnits.has(this.#gl)) {\n\t\t\tconst maxUnits = this.#gl.getParameter(\n\t\t\t\tthis.#gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS\n\t\t\t);\n\t\t\tTexture._boundUnits.set(this.#gl, new Array(maxUnits));\n\t\t}\n\t\tconst units = Texture._boundUnits.get(this.#gl);\n\n\t\tlet oldestUnit = -1;\n\t\tlet oldestTime = Infinity;\n\t\tfor (let i = 0, l = units.length; i < l; i++) {\n\t\t\tif (units[i] === undefined) {\n\t\t\t\t// \t\t\t\tconsole.log(\"Texture newly bound to unit\", i);\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.#tex);\n\t\t\t\tunits[i] = this;\n\t\t\t\treturn (this._unit = i);\n\t\t\t}\n\t\t\tif (units[i]._lastActive < oldestTime) {\n\t\t\t\toldestUnit = i;\n\t\t\t\toldestTime = units[i]._lastActive;\n\t\t\t}\n\t\t}\n\t\t// \t\tconsole.log(\"Expelled texture to bound to unit\", oldestUnit);\n\t\tgl.activeTexture(gl.TEXTURE0 + oldestUnit);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.#tex);\n\t\tunits[oldestUnit]._unit = undefined;\n\t\tunits[oldestUnit] = this;\n\t\treturn (this._unit = oldestUnit);\n\t}\n\n\t_resetParameters() {\n\t\tconst gl = this.#gl;\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.#tex);\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.minFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.magFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this.wrapS);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this.wrapT);\n\t}\n\n\t/**\n\t * @section\n\t * @method texImage2D(img: HTMLImageElement): this\n\t * (Re-)sets the texture contents to a copy of the given image. This is considered a \"full update\" of the texture.\n\t *\n\t * If the texture's format is other than `RGBA`, some data might be dropped (e.g.\n\t * putting an RGBA `HTMLImageElement` with an alpha channel into a texture with `RGB`\n\t * format shall drop the alpha channel).\n\t * @alternative\n\t * @method texImage2D(img: HTMLCanvasElement): this\n\t * @alternative\n\t * @method texImage2D(img: ImageData): this\n\t * @alternative\n\t * @method texImage2D(img: HTMLVideoElement): this\n\t * @alternative\n\t * @method texImage2D(img: ImageBitmap): this\n\t */\n\ttexImage2D(img) {\n\t\t/// TODO: set as dirty (?)\n\t\t/// TODO: notify programs using this texture that they're dirty now\n\t\t/// TODO: Read width/height from the image?? Then set as .width / .height\n\t\tconst gl = this.#gl;\n\t\tthis._isLoaded = true;\n\t\tthis.width = img.width;\n\t\tthis.height = img.height;\n\t\tthis.getUnit();\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, this.format, this.type, img);\n\t\tthis._resetParameters();\n\n\t\tthis.#generateMipmap();\n\t\treturn this;\n\t}\n\n\t/**\n\t * @section\n\t * @method texSubImage2D(img: HTMLImageElement, x: Number, y: Number): this\n\t * (Re-)sets a portion of the texture contents to a copy of the given image. The portion\n\t * starts at the given `x` and `y` coordinates, and is as big as the image.\n\t *\n\t * Otherwise, same as `texImage2D`.\n\t * @alternative\n\t * @method texSubImage2D(img: HTMLCanvasElement, x: Number, y: Number): this\n\t * @alternative\n\t * @method texSubImage2D(img: ImageData, x: Number, y: Number): this\n\t * @alternative\n\t * @method texSubImage2D(img: HTMLVideoElement, x: Number, y: Number): this\n\t * @alternative\n\t * @method texSubImage2D(img: ImageBitmap, x: Number, y: Number): this\n\t */\n\ttexSubImage2D(img, x, y) {\n\t\tconst gl = this.#gl;\n\t\tthis._isLoaded = true;\n\n\t\tthis.getUnit();\n\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, this.internalFormat, this.type, img);\n\t\tthis._resetParameters();\n\n\t\tthis.#generateMipmap();\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method texArray(w: Number, h: Number, arr: ArrayBufferView): this\n\t * (Re-)sets the texture contents to a copy of the given `ArrayBufferView`\n\t * (typically a `TypedArray` fitting this texture's `type`/`format`).\n\t * Must be given width and height as well.\n\t * @alternative\n\t * @method texArray(w: Number, h: Number, arr: null): this\n\t * Zeroes out the texture.\n\t */\n\ttexArray(w, h, arr) {\n\t\tthis.getUnit();\n\t\tconst gl = this.#gl;\n\n\t\tthis._isLoaded = true;\n\t\tthis.width = w;\n\t\tthis.height = h;\n\n\t\t// \t\tgl.texImage2D(target, level, internalformat, width, height, border, format, type, ArrayBufferView? pixels);\n\n\t\tif (arr === null || reverseTypeMap.get(this.type) !== arr.constructor) {\n\t\t\tthrow new Error(\"Passed TypedArray doesn't match the texture's pixel type \");\n\t\t}\n\n\t\tgl.texImage2D(\n\t\t\tgl.TEXTURE_2D,\n\t\t\t0,\n\t\t\tthis.internalFormat,\n\t\t\tw,\n\t\t\th,\n\t\t\t0,\n\t\t\tthis.format,\n\t\t\tthis.type,\n\t\t\tarr\n\t\t);\n\t\tthis._resetParameters();\n\n\t\tthis.#generateMipmap();\n\t\treturn this;\n\t}\n\n\t#generateMipmap() {\n\t\tconst gl = this.#gl;\n\t\tif (\n\t\t\t(this.minFilter === gl.NEAREST || this.minFilter === gl.LINEAR) &&\n\t\t\t(this.magFilter === gl.NEAREST || this.magFilter === gl.LINEAR)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tgl.generateMipmap(gl.TEXTURE_2D);\n\t}\n\n\t/**\n\t * @method isLoaded(): Boolean\n\t * Returns whether the texture has been initialized with any data at all. `true` after `texImage2D()` and the like.\n\t */\n\tisLoaded() {\n\t\treturn this._isLoaded;\n\t}\n\n\t/**\n\t * @method getComponentsPerTexel(): Number\n\t * Returns the number of components per texel, based on the `format` property.\n\t * (e.g. 3 for `RGB`, 4 for `RGBA`, etc).\n\t */\n\tgetComponentsPerTexel() {\n\t\tconst gl = this.#gl;\n\t\tswitch (this.format) {\n\t\t\tcase gl.RGBA:\n\t\t\tcase gl.RGBA_INTEGER:\n\t\t\t\treturn 4;\n\t\t\tcase gl.RGB:\n\t\t\tcase gl.RGB_INTEGER:\n\t\t\t\treturn 3;\n\t\t\tcase gl.LUMINANCE_ALPHA:\n\t\t\tcase gl.RG:\n\t\t\tcase gl.RG_INTEGER:\n\t\t\t\treturn 2;\n\t\t\tcase gl.LUMINANCE:\n\t\t\tcase gl.ALPHA:\n\t\t\tcase gl.RED:\n\t\t\tcase gl.RED_INTEGER:\n\t\t\t\treturn 1;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unknown texel data format\");\n\t\t}\n\t}\n\n\t/**\n\t * @method asImageData(): ImageData\n\t * Returns an instance of `ImageData` with the current contents of the texture.\n\t *\n\t * Note this is **not** a performant method call (it creates and destroys\n\t * an interim `FrameBuffer`) and is meant for debugging purposes only (i.e.\n\t * dumping a texture to a `HTMLCanvasElement` via [`putImageData()`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData.html)).\n\t */\n\tasImageData() {\n\t\tif (!this._isLoaded) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Must load something into the Texture before calling asImageData()\"\n\t\t\t);\n\t\t}\n\t\tconst gl = this.#gl;\n\t\tif (this.format !== gl.RGBA && this.internalFormat !== gl.R32F) {\n\t\t\tthrow new Error(\"asImageData() only available for textures with RGBA8 or R32F format\");\n\t\t}\n\n\t\tconst fb = new FrameBuffer(gl, {\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tcolour: [this],\n\t\t});\n\n\t\tlet pixels = fb.readPixels();\n\n\t\tif (this.internalFormat === gl.R32F) {\n\t\t\t// Due to WebGL shenanigans, reading a R32F texture has to create\n\t\t\t// a RGBA32F texture. Filter the GBA components to leave just the R\n\t\t\t// component.\n\t\t\tconst size = this.width * this.height;\n\t\t\tconst redComponent = new Float32Array(size);\n\t\t\tfor (let i = 0; i < size; i++) {\n\t\t\t\tredComponent[i] = pixels[i*4];\n\t\t\t}\n\t\t\tpixels = redComponent;\n\t\t}\n\n\t\tconst imagedata = new ImageData(\n\t\t\tnew Uint8ClampedArray(pixels.buffer),\n\t\t\tthis.width,\n\t\t\tthis.height\n\t\t);\n\t\tfb.destroy();\n\n\t\treturn imagedata;\n\t}\n\n\t/**\n\t * @method debugIntoCanvas(canvas: HTMLCanvasElement): this\n\t *\n\t * Convenience wrapper around `asImageData()`. Automates fetching a 2D context\n\t * from the given `HTMLCanvasElement`, resizing it, and running `putImageData()`.\n\t *\n\t * The texture might be inverted in the Y-axis (see `UNPACK_FLIP_Y_WEBGL`), it is\n\t * suggested to flip the destination canvas as well with a `transform:scaleY(-1)`\n\t * CSS rule.\n\t */\n\tdebugIntoCanvas(canvas) {\n\t\tconst data = this.asImageData();\n\t\tcanvas.width = this.width;\n\t\tcanvas.height = this.height;\n\t\tcanvas.getContext(\"2d\").putImageData(data, 0, 0);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method destroy(): this\n\t * Tells WebGL to free resources associated with this `Texture`. Use\n\t * when the `Texture` won't be used anymore.\n\t *\n\t * After being destroyed, WebGL programs should not use the destroyed `Texture`,\n\t * not any `FrameBuffer` pointing to the destroyed texture.\n\t */\n\tdestroy() {\n\t\tthis.#gl.deleteTexture(this.#tex);\n\t\tthis.#tex = undefined;\n\t}\n}\n\n/**\n * @factory GliiFactory.Texture(options: Texture options)\n *\n * @class Glii\n * @section Class wrappers\n * @property Texture(options: Texture options): Prototype of Texture\n * Wrapped `Texture` class\n */\nregisterFactory(\"Texture\", function (gl) {\n\treturn class WrappedTexture extends Texture {\n\t\tconstructor(opts) {\n\t\t\tsuper(gl, opts);\n\t\t}\n\n\t\t/**\n\t\t * @class Texture\n\t\t * @function getMaxSize(): Number\n\t\t * Returns the maximum width/height that a `Texture` instance can have.\n\t\t */\n\t\tstatic getMaxSize() {\n\t\t\treturn gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t\t}\n\t};\n});\n","/**\n * @class AbstractAttributeSet\n *\n * Represents a set of attribute data for vertices (each set being a small slice\n * of contiguous memory), plus some niceties to add/modify records.\n *\n * Internally this represents a `gl.ARRAY_BUFFER` at the WebGL level, or a Vertex Buffer\n * Object (VBO) at the OpenGL level. It also includes the VertexAttrib call(s) needed\n * to use the attribute(s) contained here (since this is WebGL1 and there are no Vertex\n * Array Objects/VAOs, which would cache this).\n *\n * Note that an `AbstractAttributeSet` might correspond to just one attribute (and\n * offer the `BindableAttribute` interface), or several attributes (and do not offer\n * the `BindableAttribute` interface, but rather have properties of setters for such).\n *\n * This is the base abstract class - record size (amount of data per vertex)\n * for this class is zero.\n *\n */\nexport default class AbstractAttributeSet {\n\tconstructor(gl, options = {}, recordSize = 0) {\n\t\tthis._gl = gl;\n\n\t\t// Size of each record, in bytes. Must be set internally in each subclass.\n\t\tthis._recordSize = recordSize;\n\n\t\t// @option size: Number = 255\n\t\t// Maximum number of records (vertices) to hold\n\t\tthis._size = options.size || 255;\n\n\t\t// @option growFactor: Boolean = false\n\t\t// Specifies that the size of this attribute buffer is static.\n\t\t// @alternative growFactor: Number\n\t\t// When `growFactor` is a `Number`, the size of this attribute buffer will\n\t\t// grow by that factor (e.g. a factor of 2 means the buffer doubles its size each\n\t\t// time the size is insufficient)\n\t\tthis._growFactor = options.growFactor;\n\n\t\t// @option usage: GLenum = gl.STATIC_DRAW\n\t\t// One of `gl.STATIC_DRAW`, `gl.DYNAMIC_DRAW` or `gl.STREAM_DRAW`.\n\t\t// See the documentation of the `usage` parameter at\n\t\t// [WebGL's `bufferData`](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n\t\t// for more details.\n\t\tthis._usage = options.usage || gl.STATIC_DRAW;\n\n\t\t// Create a WebGL ARRAY_BUFFER with (record count) * (bytes per record) bytes\n\t\tthis._buf = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._buf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, this._recordSize * this._size, this._usage);\n\n\t\tif (this._growFactor) {\n\t\t\t// Growable attribute buffers need to store all the data in a\n\t\t\t// readable data structure, in order to call `bufferData` with\n\t\t\t// the new size without destroying data.\n\t\t\t// \t\t\tthis._arrayBuf = new ArrayBuffer(this._recordSize * this._size);\n\t\t\tthis._byteData = new Uint8Array(this._recordSize * this._size);\n\t\t}\n\t}\n\n\t// Maps a string containing a GLSL type to its number of components.\n\tstatic GLSL_TYPE_COMPONENTS = {\n\t\tfloat: 1,\n\t\tvec2: 2,\n\t\tvec3: 3,\n\t\tvec4: 4,\n\t\t// mat2: 4,\n\t\t// mat3: 9,\n\t\t// mat4: 16,\n\t};\n\n\t/**\n\t * @section Batch update methods\n\t * @method commit(index, length): this\n\t * Dumps the contents of the data in RAM into GPU memory. Will dump a\n\t * contiguous section of memory, for a block of vertices starting at `index`\n\t * and with the given `length`.\n\t *\n\t * Will fail if the attribute set has been created with a `growFactor` of zero.\n\t */\n\tcommit(index, length) {\n\t\tconst gl = this._gl;\n\t\tconst addr = this._recordSize * index;\n\t\tconst size = this._recordSize * length;\n\t\tconst data = new Uint8Array(this._byteData.buffer, addr, size);\n\n\t\tif (!isFinite(addr) || !isFinite(size)) {\n\t\t\tthrow new Error(\"Cannot commit attribute data witn non-finite start/length\");\n\t\t}\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._buf);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, addr, data);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @section Internal methods\n\t * @method set(index: Number, offset: Number, data: ArrayBufferView): this\n\t *\n\t * Uploads the given `data` to GPU memory, given the vertex `index` and the byte\n\t * `offset` into that record.\n\t *\n\t * It can be used to update one record at a time (passing a record-full of `data`),\n\t * one attribute field (less than a record-full of data, specifying `offset`), or several\n\t * contiguous records.\n\t *\n\t * The input `data` is *expected* to be in the same byte format than the expected\n\t * storage; subclasses do this by coercing `TypeArray`s of specific sizes. Users\n\t * wanting to dump binary data using this method are advised to pay attention to\n\t * the way the data is packed.\n\t *\n\t * Will grow self if allowed by `grow` when `index` is larger than the current size.\n\t * @alternative\n\t * @method set(index: Number, offset: Number, data: ArrayBuffer): this\n\t * In addition to `TypedArray`s of any kind and `DataView`s, this method can\n\t * also take `ArrayBuffer`s.\n\t */\n\tsetBytes(index, offset, data) {\n\t\t// if (index >= this._size) {\n\t\tconst upperIndex =\n\t\t\tindex + Math.floor((data.byteLength + offset) / this._recordSize);\n\t\tif (upperIndex > this._size) {\n\t\t\tthis._grow(upperIndex);\n\t\t}\n\n\t\tconst gl = this._gl;\n\t\t//if (gl.getParameter(gl.ARRAY_BUFFER_BINDING) !== this._buf) {\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._buf);\n\t\t//}\n\n\t\tconst addr = this._recordSize * index + offset;\n\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, addr, data);\n\n\t\tif (this._byteData) {\n\t\t\tif (data instanceof ArrayBuffer) {\n\t\t\t\tthis._byteData.set(new Uint8Array(data), addr);\n\t\t\t} else {\n\t\t\t\tthis._byteData.set(\n\t\t\t\t\tnew Uint8Array(data.buffer, data.byteOffset, data.byteLength),\n\t\t\t\t\taddr\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t// Internal use only - grows the size of both the JS RAM `ArrayBuffer` and the\n\t// in-GPU GL arraybuffer/VBO.\n\t// Copies everything from the RAM-held copy `this._byteData`, then creates a\n\t// new, bigger RAM-held copy.\n\t_grow(minimum) {\n\t\tif (!this._growFactor) {\n\t\t\tthrow new Error(\n\t\t\t\t`Non-growable attribute buffer can only hold ${\n\t\t\t\t\tthis._size\n\t\t\t\t} records, but tried to set ${minimum + 1}-th record.`\n\t\t\t);\n\t\t}\n\t\tthis._size = Math.max(minimum + 1, Math.ceil(this._size * this._growFactor));\n\n\t\tconst newByteData = new Uint8Array(this._recordSize * this._size);\n\t\tnewByteData.set(this._byteData, 0);\n\t\tthis._byteData = newByteData;\n\n\t\tconst gl = this._gl;\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._buf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, this._byteData, this._usage);\n\t}\n}\n","// Partial regexp for precision qualifiers:\n// A capturing group that matches lowp|mediump|highp, then one or more spaces,\n// all of it optional.\nconst precisionQualifiers = \"((?:(?:lowp)|(?:mediump)|(?:highp))\\\\s+)?\";\n\n// Accepted GLSL types for attribute buffers\n// mat2/mat3/mat4 not yet here, see https://gitlab.com/IvanSanchez/glii/-/issues/18\n// A capturing group that matches float|vec2|vec3|vec4\nconst glsl1AttribTypes = \"((?:float)|(?:vec[2-4]))\";\n\n// Accepted GLSL types for declaration of varyings. Reused for uniforms.\n// A capturing group that matches float|int|bool|vec2|vec3|vec4|ivec2|ivec3|ivec4|\n// bvec2|bvec3|bvec4|mat2|mat3|mat4.\nconst glsl1VaryingTypes = \"((?:float)|(?:int)|(?:bool)|(?:[ib]?vec[2-4])|(?:mat[2-4]))\";\n\nconst regexpAttrib = new RegExp(\n\t// Nothing before.\n\t\"^\" +\n\t\t// First capturing group: optional precision qualifier\n\t\tprecisionQualifiers +\n\t\t// Second capturing group: float|vecN.\n\t\tglsl1AttribTypes +\n\t\t// Nothing afterwards.\n\t\t\"$\"\n);\n\nconst regexpVarying = new RegExp(\"^\" + precisionQualifiers + glsl1VaryingTypes + \"$\");\n\n/**\n * Parses a string containing:\n * - An (optional) precision qualifier\n * - A GLSL type for an attribute\n *\n * Returns a string of the form [precision, type]\n */\nexport function parseGlslAttribType(str) {\n\tconst match = regexpAttrib.exec(str);\n\tif (!match) {\n\t\tthrow new Error(\n\t\t\t`Invalid GLSL type. Expected float|vec2|vec3|vec4 (optionally prepended by lowp|mediump|highp), but found \"${str}\"`\n\t\t);\n\t}\n\tconst [_, precision, type] = match;\n\treturn [precision, type];\n}\n\n/**\n * Parses a string containing:\n * - An (optional) precision qualifier\n * - A GLSL type for a varying (reused for uniforms)\n *\n * Returns a string of the form [precision, type]\n */\nexport function parseGlslVaryingType(str) {\n\tconst match = regexpVarying.exec(str);\n\tif (!match) {\n\t\tthrow new Error(\n\t\t\t`Invalid GLSL type. Expected float|vec(234)|(ib)vec(234)|mat(234) (optionally prepended by lowp|mediump|highp), but found \"${str}\"`\n\t\t);\n\t}\n\tconst [_, precision, type] = match;\n\treturn [precision, type];\n}\n\nexport const parseGlslUniformType = parseGlslVaryingType;\n","import { default as typeMap } from \"../util/typeMap.mjs\";\n\nfunction stridify(arrayType) {\n\t/**\n\t * @class StridedTypedArray\n\t *\n\t * This is not a standalone class, but a decorated `TypedArray`, with\n\t * the ability to store items based on a *record index* instead of an\n\t * index relative to the number of elements in the array.\n\t *\n\t * @example\n\t * ```\n\t * // Get a strided array representation of the 3rd field in an interleaved\n\t * // attribute set (position `2` since it's zero-indexed), capable of\n\t * // holding at least 1000 vertices\n\t * let strided = myInterlavedAttributes.asStridedArray(2, 1000);\n\t *\n\t * // Assuming the field is a `vec3`, this will store data for the 42th vertex\n\t * // (`41` because, again, it's zero-indexed)\n\t * strided.set([x, y, z], 41);\n\t * ```\n\t */\n\treturn class StridedTypeArray extends arrayType {\n\t\t#stride;\n\t\t#offset;\n\n\t\tconstructor(buffer, stride, offset) {\n\t\t\tsuper(buffer);\n\n\t\t\tthis.#stride = stride;\n\t\t\tthis.#offset = offset;\n\t\t}\n\n\t\t/**\n\t\t * @method set(values: Array of Number, index: Number = 0): undefined\n\t\t * Sets the given values (as per\n\t\t * [`TypedArray.set()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set)),\n\t\t * but taking an `index` (relative to the number of records) instead of\n\t\t * an `offset` (relative to the number of elements in the array).\n\t\t *\n\t\t * No sanity checks are performed on the length on the input data. (In\n\t\t * other words: if a `StridedTypeArray` represents a `vec2` attribute,\n\t\t * then `values` should have a length of `2`, idem for `vec2` and `vec4`).\n\t\t */\n\t\tset(values, index) {\n\t\t\tsuper.set(values, index * this.#stride + this.#offset);\n\t\t}\n\t};\n}\n\nconst stridedArrays = new Map(Array.from(typeMap.keys()).map((t) => [t, stridify(t)]));\n\nexport default stridedArrays;\n","import { default as AbstractAttributeSet } from \"./AbstractAttributeSet.mjs\";\nimport { registerFactory } from \"../GliiFactory.mjs\";\nimport { default as typeMap } from \"../util/typeMap.mjs\";\nimport { parseGlslAttribType } from \"../util/parseGlslType.mjs\";\nimport stridedArrays from \"./StridedTypedArrays.mjs\";\n\n/**\n * @class SingleAttribute\n * @inherits AbstractAttributeSet\n * @inherits BindableAttribute\n *\n * Represents a `gl.ARRAY_BUFFER` holding data for a single attribute.\n *\n * @example\n *\n * ```\n * const posInPlane = new glii.SingleAttribute({\n * \ttype: Float32Array\n * \tglslType: 'vec2'\n * });\n *\n * const rgbaColour = new glii.SingleAttribute({\n * \ttype: Uint8Array,\n * \tnormalized: true,\n * \tglslType: 'vec4'\n * });\n * ```\n */\n\n/// TODO: Somehow implement integer GLSL types for WebGL2.\n\nexport default class SingleAttribute extends AbstractAttributeSet {\n\tconstructor(gl, options) {\n\t\t/**\n\t\t * @section\n\t\t * @aka SingleAttribute options\n\t\t * @option type: prototype = Float32Array\n\t\t * A specific subclass of `TypedArray` defining the data format\n\t\t */\n\t\tconst type = options.type || Float32Array;\n\t\tconst bytesPerElement = type.BYTES_PER_ELEMENT;\n\n\t\t/**\n\t\t * @option glslType: String = 'float'\n\t\t * The GLSL type associated with this attribute. One of `float`, `vec2`, `vec3`, `vec4`, with an optional precision qualifier after it (`lowp`, `mediump` or\n\t\t * `highp`, e.g. `\"mediump vec3\"`).\n\t\t *\n\t\t * This also defines the number of components for this attribute (1, 2, 3 or 4, respectively).\n\t\t *\n\t\t * `matN` attributes are not supported (yet), see https://gitlab.com/IvanSanchez/glii/-/issues/18\n\t\t */\n\t\tconst fullGlslType = options.glslType || \"float\";\n\t\tconst [glslPrecision, glslType] = parseGlslAttribType(fullGlslType);\n\t\tif (!(glslType in AbstractAttributeSet.GLSL_TYPE_COMPONENTS)) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Invalid value for the `glslType` option; must be `float`, `vec2`, `vec3`, or `vec4`.\"\n\t\t\t);\n\t\t}\n\t\tconst componentCount = AbstractAttributeSet.GLSL_TYPE_COMPONENTS[glslType];\n\n\t\tsuper(gl, options, bytesPerElement * componentCount);\n\n\t\tthis._glslType = fullGlslType;\n\t\tthis._componentCount = componentCount;\n\t\tthis._glType = typeMap.get(type);\n\n\t\tthis._normalized = options.normalized;\n\n\t\t/**\n\t\t * @method set(index: Number, value: Number): this\n\t\t * Alias of `setNumber`, available when `glslType` is `float`.\n\t\t * @alternative\n\t\t * @method set(index: Number, values: [Number]): this\n\t\t * Alias of `setArray`, available when `glslType` is `vec2`, `vec3` or `vec4`. `values`\n\t\t * must be an array of length 2, 3 or 4 (respectively).\n\t\t */\n\t\tif (options.glslType === \"float\") {\n\t\t\tthis.set = this.setNumber;\n\t\t} else {\n\t\t\tthis.set = this.setArray;\n\t\t}\n\n\t\tthis._recordBuf = new type(componentCount);\n\t\tthis._arrayType = type;\n\t}\n\n\t/**\n\t * @method setNumber(index: Number, value: Number): this\n\t * Sets the value for the `index`th vertex. Valid when `glslType` is `float`.\n\t */\n\tsetNumber(index, value) {\n\t\tthis._recordBuf[0] = value;\n\t\tsuper.setBytes(index, 0, this._recordBuf);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method setArray(index: Number, values: Array of Number): this\n\t * Sets the values for the `index`th vertex. Valid when `glslType` is `vec2`, `vec3` or `vec4`. `val` must be an array of length 2, 3 or 4 (respectively).\n\t */\n\tsetArray(index, values) {\n\t\tif (values.length !== this._componentCount) {\n\t\t\tthrow new Error(\n\t\t\t\t`Expected ${this._componentCount} values but got ${values.length}.`\n\t\t\t);\n\t\t}\n\t\tthis._recordBuf.set(values);\n\t\tsuper.setBytes(index, 0, this._recordBuf);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @section Batch update methods\n\t *\n\t * These methods are a less convenient, but more performant, way of updating\n\t * attribute data.\n\t *\n\t * For a `SingleAttribute`, the workflow is:\n\t * - Call `asTypedArray()`\n\t * - Update the values in the returned typed array (using typed array offsets,\n\t *   avoiding array concatenations)\n\t * - Call `commit()`\n\t *\n\t * These methods need the attribute set to have been created with a `growFactor`\n\t * larger than zero.\n\t *\n\t * @method asStridedArray(minSize: Number): StridedTypedArray\n\t * Returns a view of the internal in-RAM data buffer, as a `TypedArray` of\n\t * the appropriate type.\n\t */\n\tasStridedArray(minSize) {\n\t\tif (minSize > this._size) {\n\t\t\tthis._grow(minSize);\n\t\t}\n\t\treturn new (stridedArrays.get(this._arrayType))(\n\t\t\tthis._byteData.buffer,\n\t\t\tthis._componentCount,\n\t\t\t0\n\t\t);\n\t}\n\n\t/**\n\t * @method multiSet(index: Number, values: Array of Number): this\n\t *\n\t * Batch version of `setArray()`.\n\t *\n\t * Sets values for several contiguous values at once, starting with the `index`th.\n\t *\n\t * The length of `values` must be a multiple of 2, 3 or 4 when `glslType` is `vec2`,\n\t * `vec3` or `vec4` (respectively). `values` must be a flat array (i.e. run\n\t * `.flat()` if needed).\n\t */\n\tmultiSet(index, values) {\n\t\tif (values.length % this._componentCount) {\n\t\t\tthrow new Error(\n\t\t\t\t`Expected values to be a multiple of ${this._componentCount} but got ${values.length}.`\n\t\t\t);\n\t\t}\n\t\tsuper.setBytes(index, 0, this._arrayType.from(values));\n\t\treturn this;\n\t}\n\n\t// Method implementing `BindableAttribute` interface.\n\tbindWebGL1(location) {\n\t\tconst gl = this._gl;\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this._buf);\n\t\tgl.enableVertexAttribArray(location);\n\t\tgl.vertexAttribPointer(\n\t\t\tlocation,\n\t\t\tthis._componentCount,\n\t\t\tthis._glType,\n\t\t\tthis._normalized,\n\t\t\tthis._recordSize, // stride\n\t\t\t0 // offset\n\t\t);\n\t}\n\n\t// Method implementing `BindableAttribute` interface.\n\tgetGlslType() {\n\t\treturn this._glslType;\n\t}\n\n\t/**\n\t * @method destroy(): this\n\t * Tells WebGL to free resources associated with this `SingleAttribute`. Use\n\t * when the `SingleAttribute` won't be used anymore.\n\t *\n\t * After being destroyed, WebGL programs should not use the destroyed `SingleAttribute`.\n\t */\n\tdestroy() {\n\t\tthis._gl.deleteBuffer(this._buf);\n\t}\n\n\tdebugDump() {\n\t\tconst view = new this._arrayType(this._byteData.buffer);\n\n\t\treturn Array.from(new Array(this._size), (_, i) => {\n\t\t\tconst j = i * this._componentCount;\n\t\t\treturn view.subarray(j, j + this._componentCount);\n\t\t});\n\t}\n}\n\n/**\n * @factory GliiFactory.SingleAttribute(options: SingleAttribute options)\n * @class Glii\n * @section Class wrappers\n * @property SingleAttribute(options: SingleAttribute options): Prototype of SingleAttribute\n * Wrapped `SingleAttribute` class\n */\nregisterFactory(\"SingleAttribute\", function (gl) {\n\treturn class WrappedSingleAttribute extends SingleAttribute {\n\t\tconstructor(options) {\n\t\t\tsuper(gl, options);\n\t\t}\n\t};\n});\n","import { registerFactory } from \"../GliiFactory.mjs\";\n\n/**\n * @class SequentialIndices\n *\n * Represents a set of sequential vertex indices. The order cannot\n * be changed.\n *\n * A `SequentialIndices` of size `n` behaves (in practice) the same as a\n * `IndexBuffer` of size `n` with sequential indices starting at zero.\n *\n * In other words, the following two are equivalent in practice:\n *\n * ```\n * let seqIdx = new glii.SequentialIndices({ size: 9 });\n *\n * let idxBuf = new glii.IndexBuffer({ size: 9 });\n * idxBuf.set(0, [0,1,2,3,4,5,6,7,8]);\n * ```\n *\n * Internally, this performs a `gl.drawArrays` calls instead of `gl.drawElements`.\n *\n */\n\nexport default class SequentialIndices {\n\tconstructor(gl, options = {}) {\n\t\tthis._gl = gl;\n\n\t\t// @section\n\t\t// @aka SequentialIndices options\n\t\t// @option size: Number = 3\n\t\t// Exact number of indices to refer to.\n\t\tthis._size = options.size || 3;\n\n\t\t// @option drawMode: Draw mode constant = glii.TRIANGLES\n\t\t// Determines what kind of primitive is represented by the vertices\n\t\t// pointed by the indices.\n\t\tthis._drawMode = options.drawMode === undefined ? gl.TRIANGLES : options.drawMode;\n\t}\n\n\t/**\n\t * @section Internal methods\n\t * @uninheritable\n\t * @method drawMe(): undefined\n\t * Internal use only. Does the `WebGLRenderingContext.drawArrays()` calls, but\n\t * assumes that everyhing else (bound program, textures, attribute name-locations,\n\t * uniform name-locations-values) has been set up already.\n\t *\n\t * This is expected to be called from `WebGL1Program` only.\n\t */\n\tdrawMe() {\n\t\tthis._gl.drawArrays(this._drawMode, 0, this._size);\n\t}\n\n\t/**\n\t * @method drawMePartial(start: Number, count: Number): undefined\n\t * Internal use only. As `drawMe()`, but lets the programmer explicitly\n\t * set the range of vertex slots to be drawn.\n\t *\n\t * This is expected to be called from `WebGL1Program` only.\n\t */\n\tdrawMePartial(start, count) {\n\t\tthis._gl.drawArrays(this._drawMode, start, count);\n\t}\n}\n\n/**\n * @section\n * @factory GliiFactory.SequentialIndices(options: SequentialIndices options)\n * @class Glii\n * @section Class wrappers\n * @property SequentialIndices(options: SequentialIndices options): Prototype of SequentialIndices\n * Wrapped `SequentialIndices` class\n */\nregisterFactory(\"SequentialIndices\", function (gl) {\n\treturn class WrappedSequentialIndices extends SequentialIndices {\n\t\tconstructor(options) {\n\t\t\tsuper(gl, options);\n\t\t}\n\t};\n});\n","import { registerFactory } from \"../GliiFactory.mjs\";\nimport { default as SequentialIndices } from \"./SequentialIndices.mjs\";\n\n/**\n * @class IndexBuffer\n * @inherits SequentialIndices\n *\n * Represents a set of configurable vertex indices. This will tell the\n * program which vertices to draw, in which mode (points/lines/triangles),\n * and in which order. Includes a couple of niceties like setters and\n * handling of the data types.\n *\n * The implementation of `IndexBuffer` is low-ish level. Using the\n * `TriangleIndices` subclass might feel easier.\n *\n * Internally this represents a `gl.ELEMENT_ARRAY_BUFFER` at the WebGL level, or an\n * Element Array Buffer (EAB) at the OpenGL level.\n */\n\nexport default class IndexBuffer extends SequentialIndices {\n\tconstructor(gl, gliiFactory, options = {}) {\n\t\tsuper(gl, options);\n\n\t\t// @section\n\t\t// @aka IndexBuffer options\n\t\t// @option size: Number = 255\n\t\t// Maximum number of indices to hold\n\t\tthis._size = options.size || 255;\n\n\t\t// @option growFactor: Boolean = false\n\t\t// Specifies that the size of this indices buffer is static.\n\t\t// @alternative\n\t\t// @option growFactor: Number\n\t\t// Allows this buffer to automatically grow when `set()` is out of bounds.\n\t\t//\n\t\t// Each time that happens, the `size` of this indices buffer will\n\t\t// grow by that factor (e.g. a `growFactor` of 2 means the buffer doubles its size each\n\t\t// time the size is insufficient). `growFactor` should be greater than `1`.\n\t\tthis._growFactor = options.growFactor || 1.2;\n\n\t\t// @option usage: Buffer usage constant = glii.STATIC_DRAW\n\t\t// One of `gl.STATIC_DRAW`, `gl.DYNAMIC_DRAW` or `gl.STREAM_DRAW`.\n\t\t// See the documentation of the `usage` parameter at\n\t\t// [`bufferData`](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n\t\t// for more details.\n\t\tthis._usage = options.usage || gl.STATIC_DRAW;\n\n\t\t// @option type: Data type constant = glii.UNSIGNED_SHORT\n\t\t// One of `glii.UNSIGNED_BYTE`, `glii.UNSIGNED_SHORT` or `glii.UNSIGNED_INT`.\n\t\t// This sets the maximum index that can be referenced by this `IndexBuffer`\n\t\t// (but not how many indices this `IndexBuffer` can hold):\n\t\t// 2^8, 2^16 or 2^32 respectively.\n\t\t// See the documentation of the `usage` parameter at\n\t\t// [`gl.drawElements`](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawElements)\n\t\t// for more details.\n\t\tthis._type = options.type || gl.UNSIGNED_SHORT;\n\n\t\tif (this._type === gl.UNSIGNED_BYTE) {\n\t\t\tthis._bytesPerSlot = 1;\n\t\t\tthis._typedArray = Uint8Array;\n\t\t\tthis._maxValue = 1 << 8;\n\t\t} else if (this._type === gl.UNSIGNED_SHORT) {\n\t\t\tthis._bytesPerSlot = 2;\n\t\t\tthis._typedArray = Uint16Array;\n\t\t\tthis._maxValue = 1 << 16;\n\t\t} else if (this._type === gl.UNSIGNED_INT) {\n\t\t\t/// Manually load the relevant GL extension, only needed in WebGL1\n\t\t\t/// contexts.\n\t\t\tgliiFactory.isWebGL2() || gliiFactory.loadExtension(\"OES_element_index_uint\");\n\n\t\t\tthis._bytesPerSlot = 4;\n\t\t\tthis._typedArray = Uint32Array;\n\t\t\tthis._maxValue = (1 << 16) * (1 << 16); // The JS << operator is clamped to 2^32 :-/\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t\"Invalid type for IndexBuffer. Must be one of `gl.UNSIGNED_BYTE`, `gl.UNSIGNED_SHORT` or `gl.UNSIGNED_INT`.\"\n\t\t\t);\n\t\t}\n\t\tthis._buf = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._buf);\n\t\tgl.bufferData(\n\t\t\tgl.ELEMENT_ARRAY_BUFFER,\n\t\t\tthis._size * this._bytesPerSlot,\n\t\t\tthis._usage\n\t\t);\n\n\t\t// Upper bound of many indices in this IndexBuffer are pointing to valid vertices.\n\t\t// AKA \"highest set slot\"\n\t\tthis._activeIndices = 0;\n\n\t\tif (this._growFactor) {\n\t\t\t// Growable index buffers need to store all the data in a\n\t\t\t// readable data structure, in order to call `bufferData` with\n\t\t\t// the new size without destroying data.\n\t\t\tthis._ramData = new this._typedArray(this._size);\n\t\t}\n\t}\n\n\t/**\n\t * @method set(n: Number, indices: Array of Number): this\n\t * Stores the given indices as 1-, 2- or 4-byte integers, starting at the `n`-th\n\t * position in this `IndexBuffer` (zero-indexed; the first index slot is at `n`=0).\n\t *\n\t * The indices passed must exist (and likely, have values) in any\n\t * `AttributeBuffer`s being used together with this `IndexBuffer` in a\n\t * GL program.\n\t */\n\tset(n, indices) {\n\t\tif (indices.length === 0) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst gl = this._gl;\n\t\tthis.grow(n + indices.length);\n\n\t\tgl.bufferSubData(\n\t\t\tgl.ELEMENT_ARRAY_BUFFER,\n\t\t\tn * this._bytesPerSlot,\n\t\t\tthis._typedArray.from(indices)\n\t\t);\n\n\t\tthis._setActiveIndices(n + indices.length);\n\n\t\tif (this._ramData) {\n\t\t\tthis._ramData.set(indices, n);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method truncate(n: Number): this\n\t * Shrinks the amount of indices to be drawn, so that only the first `n`\n\t * indices are considered.\n\t */\n\ttruncate(n) {\n\t\tthis._activeIndices = Math.min(this._activeIndices, n);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @section Internal methods\n\t * @uninheritable\n\t * @method grow(minimum): undefined\n\t * Internal usage only. Grows the size of both the internal buffer, so\n\t * it can contain at least `minimum` index slots.\n\t */\n\tgrow(minimum) {\n\t\tthis.bindMe();\n\t\tif (this._size >= minimum) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this._growFactor) {\n\t\t\tthrow new Error(\n\t\t\t\t`Tried to set index out of bounds of non-growable IndexBuffer (requested ${minimum} vs size ${this._size})`\n\t\t\t);\n\t\t} else {\n\t\t\tthis._size = Math.max(minimum + 1, Math.ceil(this._size * this._growFactor));\n\n\t\t\tconst newRamData = new this._typedArray(this._size);\n\t\t\tnewRamData.set(this._ramData, 0);\n\t\t\tthis._ramData = newRamData;\n\n\t\t\tconst gl = this._gl;\n\t\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._ramData, this._usage);\n\t\t}\n\t}\n\n\t/**\n\t * @method bindMe(): undefined\n\t * Internal use only. (Re-)binds itself as the `ELEMENT_ARRAY_BUFFER` of the\n\t * `WebGLRenderingContext`.\n\t *\n\t * In practice, this should happen every time the program changes in the\n\t * current context.\n\t *\n\t * This is expected to be called from `WebGL1Program` only.\n\t */\n\tbindMe() {\n\t\tconst gl = this._gl;\n\t\t//if (gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING) !== this._buf) {\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._buf);\n\t\t//}\n\t}\n\n\t/**\n\t * @method drawMe(): undefined\n\t * Internal use only. Does the `WebGLRenderingContext.drawElement()` calls, but\n\t * assumes that everyhing else (bound program, textures, attribute name-locations,\n\t * uniform name-locations-values) has been set up already.\n\t *\n\t * This is expected to be called from `WebGL1Program` only.\n\t */\n\tdrawMe() {\n\t\tthis.bindMe();\n\t\tthis._gl.drawElements(this._drawMode, this._activeIndices, this._type, 0);\n\t}\n\n\t/**\n\t * @method drawMePartial(start: Number, count: Number): undefined\n\t * Internal use only. As `drawMe()`, but lets the programmer explicitly\n\t * set the range of vertex slots to be drawn.\n\t *\n\t * This is expected to be called from `WebGL1Program` only.\n\t */\n\tdrawMePartal(start, count) {\n\t\tthis.bindMe();\n\t\tthis._gl.drawElements(\n\t\t\tthis._drawMode,\n\t\t\tcount,\n\t\t\tthis._type,\n\t\t\tstart * this._bytesPerSlot\n\t\t);\n\t}\n\n\t// Set the number of active indices to either the given number or the number of active indices,\n\t// whatever is greater.\n\t_setActiveIndices(n) {\n\t\tthis._activeIndices = Math.max(this._activeIndices, n);\n\t}\n\n\t/**\n\t * @section\n\t * @method destroy(): this\n\t * Tells WebGL to free resources associated with this `IndexBuffer`. Use\n\t * when the `IndexBuffer` won't be used anymore.\n\t *\n\t * After being destroyed, WebGL programs should not use the destroyed `IndexBuffer`.\n\t */\n\tdestroy() {\n\t\tthis._gl.deleteBuffer(this._buf);\n\t}\n\n\t/**\n\t * @section Batch update methods\n\t *\n\t * These methods are a less convenient, but more performant, way of updating\n\t * indices data.\n\t *\n\t * For a `IndexBuffer`, the workflow is:\n\t * - Call `asTypedArray()` once\n\t * - Update the values in the returned typed array (using typed array offsets,\n\t *   avoiding array concatenations)\n\t * - Call `commit()`\n\t *\n\t * These methods need the index buffer to have been created with a `growFactor`\n\t * larger than zero.\n\t *\n\t * @method asTypedarray(minSize?: Number): TypedArray\n\t * Returns a view of the internal in-RAM buffer for the index data, able to\n\t * contain at least `minSize` indices.\n\t */\n\tasTypedArray(minSize) {\n\t\tif (isFinite(minSize)) {\n\t\t\tthis.grow(minSize);\n\t\t}\n\t\treturn this._ramData;\n\t}\n\n\t/**\n\t * @method commit(start, length): this\n\t * Dumps the contents of the data in RAM into GPU memory. Will dump\n\t * a contiguous section, for a block of indices starting at `start` and\n\t * with the given `length`.\n\t */\n\tcommit(start, length) {\n\t\tthis.bindMe();\n\n\t\tconst addr = this._bytesPerSlot * start;\n\t\tconst data = new this._typedArray(this._ramData.buffer, addr, length);\n\t\tconst gl = this._gl;\n\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, addr, data);\n\n\t\tthis._setActiveIndices(start + length);\n\t}\n}\n\n/**\n * @factory GliiFactory.IndexBuffer(options: IndexBuffer options)\n * @class Glii\n * @section Class wrappers\n * @property IndexBuffer(options: IndexBuffer options): Prototype of IndexBuffer\n * Wrapped `IndexBuffer` class\n */\nregisterFactory(\"IndexBuffer\", function (gl, gliiFactory) {\n\treturn class WrappedIndexBuffer extends IndexBuffer {\n\t\tconstructor(options) {\n\t\t\tsuper(gl, gliiFactory, options);\n\t\t}\n\t};\n});\n","const errRegexp = /ERROR: 0:([0-9]+):(.*)\\n/;\n\n/**\n * Internal helper function\n *\n * Tries to parse the (first) error from a shader compile log (from a\n * getShaderInfoLog() call), extracts the corresponding (offset) line\n * from the given source, and throws an error containing that information.\n */\nexport default function prettifyGlslError(log, header, src, type, lineOffset) {\n\tconst match = errRegexp.exec(log);\n\tif (match) {\n\t\tlet lineNumber = match[1];\n\t\tconst msg = match[2];\n\n\t\tif (lineNumber < lineOffset) {\n\t\t\tconst line = header.split(\"\\n\")[lineNumber - 1];\n\t\t\tthrow new Error(\n\t\t\t\t`Could not compile ${type} shader, reason:\\n${msg}\\nError lies in injected GLSL headers (check inputs like attributes and uniforms)\\nAround line ${lineNumber}: ${line}`\n\t\t\t);\n\t\t} else {\n\t\t\tlineNumber -= lineOffset;\n\t\t\tconst line = src.split(\"\\n\")[lineNumber - 1];\n\t\t\tthrow new Error(\n\t\t\t\t`Could not compile ${type} shader, reason:\\n${msg}\\nAround line ${lineNumber}: ${line}`\n\t\t\t);\n\t\t}\n\t}\n\n\tthrow new Error(`Could not compile ${type} shader, reason in unknown line:\\n${log}`);\n}\n","import { registerFactory } from \"../GliiFactory.mjs\";\n// import { default as IndexBuffer } from \"./Indices/IndexBuffer.mjs\";\nimport { default as SequentialIndices } from \"../Indices/SequentialIndices.mjs\";\n// import { default as AttributeBuffer } from \"./AbstractAttributeBuffer.mjs\";\n// import { default as addLineNumbers } from \"./util/addLineNumbers.mjs\";\nimport { default as prettifyGlslError } from \"../util/prettifyGlslError.mjs\";\nimport { parseGlslVaryingType, parseGlslUniformType } from \"../util/parseGlslType.mjs\";\n\n/**\n * @class WebGL1Program\n *\n * Represents a draw call using only WebGL1 APIs.\n *\n * A `WebGL1Program` compiles the shader strings and binding textures,\n * indices, attributes and the framebuffer together (even though most\n * functionality is delegated).\n *\n * @relationship compositionOf SequentialIndices, 1..1, 0..n\n * @relationship compositionOf BindableAttribute, 0..n, 0..n\n * @relationship compositionOf Texture, 0..n, 0..n\n * @relationship compositionOf FrameBuffer, 0..1, 0..n\n */\n\nexport default class WebGL1Program {\n\t// TODO: alias \"vertexShaderSource\" to \"vert\"?\n\t// TODO: alias \"fragmentShaderSource\" to \"frag\"?\n\t// TODO: alias \"indexBuffer\" to \"indices\"?\n\t// TODO: alias \"attributeBuffers\" to \"attributes\" to \"attrs\"?\n\n\t// TODO: Stuff from REGL https://regl.party/api :\n\t// * Stencil\n\t// * Polygon offset\n\t// * Culling - IndexBuffer ?\n\t// * Front face - IndexBuffer ?\n\t// * Dithering\n\t// * Line width - IndexBuffer ?\n\t// * Color mask\n\t// * Sample coverage\n\t// * Scissor\n\t// * Viewport\n\n\tconstructor(\n\t\tgl,\n\t\tgliiFactory,\n\t\t{\n\t\t\t/**\n\t\t\t * @section\n\t\t\t * @aka WebGL1Program options\n\t\t\t * @option vertexShaderSource: String; GLSL v1.00 source code for the vertex shader\n\t\t\t */\n\t\t\tvertexShaderSource,\n\t\t\t/**\n\t\t\t * @option varyings: [Object]; A key-value map of varying names and their GLSL v1.00 types\n\t\t\t */\n\t\t\tvaryings = {},\n\t\t\t/**\n\t\t\t * @option fragmentShaderSource: String; GLSL v1.00 source code for the fragment shader\n\t\t\t */\n\t\t\tfragmentShaderSource,\n\t\t\t/**\n\t\t\t * @option indexBuffer: IndexBuffer\n\t\t\t * The `IndexBuffer` containing which vertices to draw.\n\t\t\t */\n\t\t\tindexBuffer,\n\t\t\t/**\n\t\t\t * @option attributes: Object = {}; A key-value map of attribute names and their `BindableAttribute`\n\t\t\t */\n\t\t\tattributes = {},\n\t\t\t/**\n\t\t\t * @option uniforms: Object = {}; A key-value map of uniform names and their GLSL v1.00 types\n\t\t\t */\n\t\t\tuniforms = {},\n\t\t\t/**\n\t\t\t * @option textures: Object = {}; A key-value map of texture names and their `Texture` counterpart\n\t\t\t */\n\t\t\ttextures = {},\n\t\t\t/**\n\t\t\t * @option target: FrameBuffer = null\n\t\t\t * When `target` is null or not specified, the program\n\t\t\t * will draw to the default framebuffer (the one attached to the `<canvas>` being used).\t\t * @alternative\n\t\t\t * @option target: FrameBuffer = null; The `FrameBuffer` to draw to.\n\t\t\t */\n\t\t\ttarget = null,\n\t\t\t/**\n\t\t\t * @option depth: Comparison constant = glii.ALWAYS\n\t\t\t * Initial value for the `depth` property.\n\t\t\t * @property depth: Comparison constant = glii.ALWAYS\n\t\t\t * Whether this program performs depth testing, and how. Can be changed during runtime.\n\t\t\t *\n\t\t\t * `gl.ALWAYS` is the same as disabling depth testing.\n\t\t\t *\n\t\t\t * Has no effect if the `FrameBuffer` for this program has no depth attachment.\n\t\t\t */\n\t\t\tdepth = 0x0207, /// 0x207 = gl.ALWAYS\n\t\t\t/**\n\t\t\t * @option blend: Boolean = false\n\t\t\t * Disables fragment blending\n\t\t\t * @alternative\n\t\t\t * @option blend: BlendDefinition\n\t\t\t * Enables fragment blending, with the provided configuration.\n\t\t\t */\n\t\t\tblend = false,\n\n\t\t\t/**\n\t\t\t * @option unusedWarning: Boolean = true\n\t\t\t * Whether to display warnings in the browser's console about\n\t\t\t * unused attributes, unused textures and unused uniforms.\n\t\t\t */\n\t\t\tunusedWarning = true,\n\t\t}\n\t) {\n\t\tthis._gl = gl;\n\n\t\t// The factory that spawned this program is important for fetching the\n\t\t// size of the default framebuffer, in order to prevent blinking when a\n\t\t// <canvas> is resized.\n\t\tthis._gliiFactory = gliiFactory;\n\n\t\t// Loop through attribute buffers to fetch defined attribute names and their types\n\t\t// to build up a header for the fragment shader.\n\t\tlet attribDefs = \"\";\n\n\t\tfor (let attribName in attributes) {\n\t\t\tconst type = attributes[attribName].getGlslType();\n\t\t\tattribDefs += `attribute ${type} ${attribName};\\n`;\n\t\t}\n\n\t\t// Loop through uniform and texture definitions to get their names and types\n\t\t// to build up a header common for both the vertex and the fragment shader\n\t\tlet uniformDefs = \"\";\n\t\tthis._unifSetters = {};\n\t\tfor (let uName in uniforms) {\n\t\t\tconst uniformType = uniforms[uName];\n\t\t\tconst [_, glslType] = parseGlslUniformType(uniformType);\n\t\t\tswitch (glslType) {\n\t\t\t\tcase \"float\":\n\t\t\t\t\tthis._unifSetters[uName] = gl.uniform1f.bind(gl);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"vec2\":\n\t\t\t\t\tthis._unifSetters[uName] = gl.uniform2fv.bind(gl);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"vec3\":\n\t\t\t\t\tthis._unifSetters[uName] = gl.uniform3fv.bind(gl);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"vec4\":\n\t\t\t\t\tthis._unifSetters[uName] = gl.uniform4fv.bind(gl);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"int\":\n\t\t\t\tcase \"bool\":\n\t\t\t\t\tthis._unifSetters[uName] = gl.uniform1i.bind(gl);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ivec2\":\n\t\t\t\tcase \"bvec2\":\n\t\t\t\t\tthis._unifSetters[uName] = gl.uniform2iv.bind(gl);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ivec3\":\n\t\t\t\tcase \"bvec3\":\n\t\t\t\t\tthis._unifSetters[uName] = gl.uniform3iv.bind(gl);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ivec4\":\n\t\t\t\tcase \"bvec4\":\n\t\t\t\t\tthis._unifSetters[uName] = gl.uniform4iv.bind(gl);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"mat2\":\n\t\t\t\t\tthis._unifSetters[uName] = (p, v) => gl.uniformMatrix2fv(p, false, v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"mat3\":\n\t\t\t\t\tthis._unifSetters[uName] = (p, v) => gl.uniformMatrix3fv(p, false, v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"mat4\":\n\t\t\t\t\tthis._unifSetters[uName] = (p, v) => gl.uniformMatrix4fv(p, false, v);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unknown uniform GLSL type \"${uniformType}\"`);\n\t\t\t}\n\n\t\t\tuniformDefs += `uniform ${uniformType} ${uName};\\n`;\n\t\t}\n\t\tfor (let texName in textures) {\n\t\t\tuniformDefs += \"uniform sampler2D \" + texName + \";\\n\";\n\t\t}\n\n\t\tlet varyingDefs = Object.entries(varyings)\n\t\t\t.map(([n, t]) => {\n\t\t\t\tparseGlslVaryingType(t);\n\t\t\t\treturn `varying ${t} ${n};\\n`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\t/// TODO: allow the dev to change this\n\t\tconst precisionHeader = \"precision highp float;\\n\";\n\n\t\tconst program = (this._program = gl.createProgram());\n\t\tconst vertexShader = this._compileShader(\n\t\t\tgl.VERTEX_SHADER,\n\t\t\t// \"#version 100\\n\" +\n\t\t\tprecisionHeader + attribDefs + varyingDefs + uniformDefs,\n\t\t\tvertexShaderSource\n\t\t);\n\t\tconst fragmtShader = this._compileShader(\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\t// \"#version 100\\n\" +\n\t\t\tprecisionHeader + varyingDefs + uniformDefs,\n\t\t\tfragmentShaderSource\n\t\t);\n\t\tgl.linkProgram(program);\n\t\tvar success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\t\tif (!success) {\n\t\t\tconsole.warn(gl.getProgramInfoLog(program));\n\t\t\tgl.deleteProgram(program);\n\t\t\tthrow new Error(\"Could not compile shaders into a WebGL1 program\");\n\t\t}\n\n\t\t// According to a note in\n\t\t// https://webglfundamentals.org/webgl/lessons/resources/webgl-state-diagram.html ,\n\t\t// it is safe to detach and delete shaders once the program is linked.\n\t\tgl.detachShader(program, vertexShader);\n\t\tgl.deleteShader(vertexShader);\n\t\tgl.detachShader(program, fragmtShader);\n\t\tgl.deleteShader(fragmtShader);\n\n\t\tif (!(indexBuffer instanceof SequentialIndices)) {\n\t\t\tthrow new Error(\n\t\t\t\t\"The WebGL1Program constructor needs a valid `IndexBuffer` to be passed as an option.\"\n\t\t\t);\n\t\t}\n\t\tthis._indexBuff = indexBuffer;\n\n\t\tthis._attrs = attributes;\n\t\tthis._attribsMap = {};\n\n\t\tfor (let attribName in attributes) {\n\t\t\tconst loc = gl.getAttribLocation(this._program, attribName);\n\t\t\tif (loc === -1) {\n\t\t\t\tif (unusedWarning)\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Attribute \"${attribName}\" is not used in the shaders and will be ignored`\n\t\t\t\t\t);\n\t\t\t\tdelete this._attrs[attribName];\n\t\t\t} else {\n\t\t\t\tthis._attribsMap[attribName] = loc;\n\t\t\t}\n\t\t}\n\n\t\tthis._unifsMap = {};\n\t\tthis._texs = textures;\n\t\tthis._unifs = uniforms;\n\t\tfor (let unifName in uniforms) {\n\t\t\tconst loc = gl.getUniformLocation(this._program, unifName);\n\t\t\tif (unusedWarning && loc === -1) {\n\t\t\t\tconsole.warn(`Uniform \"${unifName}\" is not being used in the shaders.`);\n\t\t\t}\n\t\t\tthis._unifsMap[unifName] = loc;\n\t\t}\n\t\tfor (let texName in textures) {\n\t\t\tif (texName in this._unifsMap) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Texture name \"${texName}\" conflicts with already defined (non-texture) uniform.`\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst loc = gl.getUniformLocation(this._program, texName);\n\t\t\tif (unusedWarning && loc === -1) {\n\t\t\t\tconsole.warn(`Texture \"${texName}\" is not being used in the shaders.`);\n\t\t\t}\n\t\t\tthis._unifsMap[texName] = loc;\n\t\t}\n\n\t\tthis._target = target;\n\t\tthis.depth = depth;\n\t\tthis.blend = blend;\n\t\t// console.log(\"attrib map: \", this._attribsMap);\n\t\t// console.log(\"unifs map: \", this._unifsMap);\n\t}\n\n\t_compileShader(type, header, src) {\n\t\tconst gl = this._gl;\n\t\t/// FIXME: Running on puppeteer, `shader` is not a `WebGLShader` instance,\n\t\t/// which throws an error when trying to set the source.\n\t\t// See also: https://github.com/mapbox/mapbox-gl-js/pull/9017\n\t\tconst shader = gl.createShader(type);\n\t\t// \t\ttry {\n\t\tgl.shaderSource(shader, \"#line 1\\n\" + header + \"#line 10001\\n\" + src);\n\t\t// \t\t} catch(ex) {\n\t\t// \t\t\tconsole.warn(\"Context lost?\");\n\t\t// \t\t\tconsole.log(shader);\n\t\t// \t\t\tdebugger;\n\t\t// \t\t}\n\t\tgl.compileShader(shader);\n\t\tconst success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tif (success) {\n\t\t\t// console.warn(addLineNumbers(gl.getShaderSource(shader)));\n\t\t\tgl.attachShader(this._program, shader);\n\t\t\treturn shader;\n\t\t}\n\n\t\tconst log = gl.getShaderInfoLog(shader);\n\t\tgl.deleteShader(shader);\n\n\t\t// Try to throw a pretty error message\n\t\tconst readableType = type === gl.VERTEX_SHADER ? \"vertex\" : \"fragment\";\n\t\tprettifyGlslError(log, header, src, readableType, 10000);\n\n\t\t// console.warn(gl.getSupportedExtensions());\n\t\t// console.warn(addLineNumbers(gl.getShaderSource(shader)));\n\t\t// console.warn(gl.getShaderInfoLog(shader));\n\t\tthrow new Error(\"Could not compile shader.\");\n\t}\n\n\t_preRun() {\n\t\tconst gl = this._gl;\n\n\t\t// TODO: Double- and triple-check that viewport and clear are needed at this stage\n\t\t// TODO: handle explicit viewports.\n\t\t// TODO: Allow the dev to override the following defaults:\n\t\tif (!this._target) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t// const [width, height] = this._gliiFactory.getDrawingBufferSize();\n\t\t\t// gl.viewport(0, 0, width, height);\n\t\t\tthis._gliiFactory.refreshDrawingBufferSize();\n\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t} else {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this._target.fb);\n\t\t\tgl.viewport(0, 0, this._target.width, this._target.height);\n\t\t}\n\n\t\tif (this.blend) {\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.blendEquationSeparate(this.blend.equationRGB, this.blend.equationAlpha);\n\t\t\tgl.blendFuncSeparate(\n\t\t\t\tthis.blend.srcRGB,\n\t\t\t\tthis.blend.dstRGB,\n\t\t\t\tthis.blend.srcAlpha,\n\t\t\t\tthis.blend.dstAlpha\n\t\t\t);\n\t\t\tif (this.blend.colour) {\n\t\t\t\tgl.blendColor(\n\t\t\t\t\tthis.blend.colour[0],\n\t\t\t\t\tthis.blend.colour[1],\n\t\t\t\t\tthis.blend.colour[2],\n\t\t\t\t\tthis.blend.colour[3]\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tgl.disable(gl.BLEND);\n\t\t}\n\n\t\t/// TODO: Consider caching the loaded program somehow. Maybe copy\n\t\t/// the technique from the Texture's WeakMap?\n\t\tgl.useProgram(this._program);\n\n\t\tif (this.depth === gl.ALWAYS) {\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t} else {\n\t\t\tgl.enable(gl.DEPTH_TEST);\n\t\t\tgl.depthFunc(this.depth);\n\t\t}\n\n\t\tfor (let attribName in this._attrs) {\n\t\t\tconst location = this._attribsMap[attribName];\n\t\t\tthis._attrs[attribName].bindWebGL1(location);\n\t\t}\n\n\t\tfor (let texName in this._texs) {\n\t\t\tif (this._texs[texName]) {\n\t\t\t\tgl.uniform1i(this._unifsMap[texName], this._texs[texName].getUnit());\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @section Draw methods\n\t * @method run():this\n\t * Runs the draw call for this program\n\t * @alternative\n\t * @method run(lod: Number): this\n\t * If the program's index buffer is a `LodIndices`, then this runs the\n\t * draw call for this program, but only for the primitives in the given LoD.\n\t * @alternative\n\t * @method run(lod: String): this\n\t * Idem, but for `String` LoD identifiers.\n\t */\n\trun(lod) {\n\t\tthis._preRun();\n\t\tthis._indexBuff.drawMe(lod);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method runPartial(start: Number, count: Number):this\n\t * Runs the draw call for this program, but explicitly only for\n\t * the slots given as parameter (instead of using the information\n\t * of slots in use from the `IndexBuffer` of this program).\n\t *\n\t * Beware that `runPartial` does not perform any validity checks\n\t * on the given range. This should only be used when the programmer\n\t * is really really sure of what vertex slots to draw.\n\t */\n\trunPartial(start, count) {\n\t\tthis._preRun();\n\t\tthis._indexBuff.drawMePartial(start, count);\n\t\treturn this;\n\t}\n\n\t/**\n\t * @section Mutation methods\n\t *\n\t * The following methods allow changing some of the components of a program\n\t * during runtime.\n\t *\n\t * @method setUniform(name: String, value: Number): this\n\t * (Re-)sets the value of a uniform in this program, for `float`/`int` uniforms.\n\t * @alternative\n\t * @method setUniform(name: String, value: [Number]): this\n\t * (Re-)sets the value of a uniform in this program, for `vecN`/`ivecN`/`matN` uniforms.\n\t */\n\tsetUniform(name, value) {\n\t\t// TODO: mark self as dirty\n\t\tthis._gl.useProgram(this._program);\n\n\t\tif (name in this._unifSetters) {\n\t\t\tthis._unifSetters[name](this._unifsMap[name], value);\n\t\t\treturn this;\n\t\t} else {\n\t\t\tthrow new Error(`Uniform name ${name} is unknown in this WebGL1Program.`);\n\t\t}\n\t}\n\n\t/**\n\t * @method getUniform(name: String): *\n\t * Returns the value of the uniform with the given name. Return value will\n\t * be a `Number` or a `TypedArray` depending on the uniform's type.\n\t */\n\tgetUniform(name) {\n\t\tconst location = this._unifsMap[name];\n\t\tif (location){\n\t\t\treturn this._gl.getUniform( this._program, location);\n\t\t} else {\n\t\t\tthrow new Error(`Uniform name ${name} is unknown or unused in this WebGL1Program.`);\n\t\t}\n\t}\n\n\t/**\n\t * @method setTexture(name: String, texture: Texture): this\n\t * (Re-)sets the value of a texture in this program.\n\t */\n\tsetTexture(name, texture) {\n\t\tthis._texs[name] = texture;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method setIndexBuffer(buf: IndexBuffer): this\n\t * Changes the index buffer that this program uses.\n\t */\n\tsetIndexBuffer(buf) {\n\t\tthis._indexBuff = buf;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method setAttribute(name: Stringattr: BindableAttribute): this\n\t * (Re-)sets one of the named attributes to a new `BindableAttribute`.\n\t *\n\t * The GLSL type of the new attribute must match the old one.\n\t */\n\tsetAttribute(name, attr) {\n\t\tif (this._attrs[name].getGlslType() !== attr.getGlslType()) {\n\t\t\tthrow new Error(\n\t\t\t\t`Bindable attribute named ${name} expected to be of type ${this._attrs[\n\t\t\t\t\tname\n\t\t\t\t].getGlslType()}, but instead got ${attr.getGlslType()}`\n\t\t\t);\n\t\t}\n\t\tthis._attrs[name] = attr;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method setTarget(target: FrameBuffer): this\n\t * Sets the `FrameBuffer` that this program should draw into.\n\t * @alternative\n\t * @method setTarget(target: null): this\n\t * Setting the draw target to `null` (or a falsy value) will make the program\n\t * draw to the default framebuffer (the one attached to the `<canvas>` used\n\t * to spawn the Glii instance).\n\t */\n\tsetTarget(target) {\n\t\tthis._target = target;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @section Lifetime methods\n\t *\n\t * @method destroy(): this\n\t * Tells WebGL to free resources associated with this `WebGL1Program`. Use\n\t * when the `WebGL1Program` won't be used anymore.\n\t */\n\tdestroy() {\n\t\tthis._gl.deleteProgram(this._program);\n\t}\n\n\t/**\n\t * @section\n\t * @method debugDumpAttributes(): Array of Object of TypedArray\n\t * Returns a readable representation of the current attribute values. This is\n\t * only possible when all attribute storages are growable (i.e. those defined with\n\t * a `growFactor` greater than zero).\n\t *\n\t * This is a costly operation, and should be only used for manual debugging purposes.\t */\n\tdebugDumpAttributes() {\n\t\tconst attrValues = {};\n\n\t\tfor (const [name, bound] of Object.entries(this._attrs)) {\n\t\t\tattrValues[name] = bound.debugDump();\n\t\t}\n\n\t\t// Reorganize data, so it's ordered by vertex index first,\n\t\t// attribute name second.\n\t\tlet maxLength = 0;\n\t\tfor (let values of Object.values(attrValues)) {\n\t\t\tmaxLength = Math.max(maxLength, values.length);\n\t\t}\n\n\t\treturn Array.from(new Array(maxLength), (_, i) => {\n\t\t\tconst obj = {};\n\t\t\tfor (const [name, values] of Object.entries(attrValues)) {\n\t\t\t\tobj[name] = values[i];\n\t\t\t}\n\t\t\treturn obj;\n\t\t});\n\t}\n}\n\n/**\n * @factory GliiFactory.WebGL1Program(options: WebGL1Program options)\n * @class Glii\n * @section Class wrappers\n * @property WebGL1Program(options: WebGL1Program options): Prototype of WebGL1Program\n * Wrapped `WebGL1Program` class\n */\nregisterFactory(\"WebGL1Program\", function (gl, gliiFactory) {\n\treturn class WrappedWebGL1Program extends WebGL1Program {\n\t\tconstructor(opts) {\n\t\t\tsuper(gl, gliiFactory, opts);\n\t\t}\n\t};\n});\n","/**\n * This file is a trivial rename of tinyqueue.\n *\n * See https://github.com/mourner/tinyqueue\n *\n * ---\n *\n * ISC License\n *\n * Copyright (c) 2017, Vladimir Agafonkin\n *\n * Permission to use, copy, modify, and/or distribute this software for any purpose\n * with or without fee is hereby granted, provided that the above copyright notice\n * and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n * OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n * THIS SOFTWARE.\n *\n */\n\nexport default class TinyQueue {\n\tconstructor(data = [], compare = defaultCompare) {\n\t\tthis.data = data;\n\t\tthis.length = this.data.length;\n\t\tthis.compare = compare;\n\n\t\tif (this.length > 0) {\n\t\t\tfor (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n\t\t}\n\t}\n\n\tpush(item) {\n\t\tthis.data.push(item);\n\t\tthis.length++;\n\t\tthis._up(this.length - 1);\n\t}\n\n\tpop() {\n\t\tif (this.length === 0) return undefined;\n\n\t\tconst top = this.data[0];\n\t\tconst bottom = this.data.pop();\n\t\tthis.length--;\n\n\t\tif (this.length > 0) {\n\t\t\tthis.data[0] = bottom;\n\t\t\tthis._down(0);\n\t\t}\n\n\t\treturn top;\n\t}\n\n\tpeek() {\n\t\treturn this.data[0];\n\t}\n\n\t_up(pos) {\n\t\tconst { data, compare } = this;\n\t\tconst item = data[pos];\n\n\t\twhile (pos > 0) {\n\t\t\tconst parent = (pos - 1) >> 1;\n\t\t\tconst current = data[parent];\n\t\t\tif (compare(item, current) >= 0) break;\n\t\t\tdata[pos] = current;\n\t\t\tpos = parent;\n\t\t}\n\n\t\tdata[pos] = item;\n\t}\n\n\t_down(pos) {\n\t\tconst { data, compare } = this;\n\t\tconst halfLength = this.length >> 1;\n\t\tconst item = data[pos];\n\n\t\twhile (pos < halfLength) {\n\t\t\tlet left = (pos << 1) + 1;\n\t\t\tlet best = data[left];\n\t\t\tconst right = left + 1;\n\n\t\t\tif (right < this.length && compare(data[right], best) < 0) {\n\t\t\t\tleft = right;\n\t\t\t\tbest = data[right];\n\t\t\t}\n\t\t\tif (compare(best, item) >= 0) break;\n\n\t\t\tdata[pos] = best;\n\t\t\tpos = left;\n\t\t}\n\n\t\tdata[pos] = item;\n\t}\n}\n\nfunction defaultCompare(a, b) {\n\treturn a < b ? -1 : a > b ? 1 : 0;\n}\n","import TinyQueue from \"./3rd-party/tinyqueue.mjs\";\n\nexport default class Arrugator {\n\tconstructor(projector, verts, uv, trigs) {\n\t\t// The projector function. Must be able to take\n\t\t// an array of two numbers [x,y] and return an array of\n\t\t// two numbers.\n\t\t// The typical use case is a proj4(from,to).forward function.\n\t\tthis._projector = projector;\n\n\t\t// A two-dimensional array of vertex coordinates. Each vertex is a\n\t\t// two-element [x,y] array.\n\t\tthis._verts = verts;\n\n\t\t// A two-dimensional array of UV-map coordinates. These are intended to\n\t\t// represent the [0,0]-[1-1] coordinate space of WebGL textures. Each\n\t\t// n-th element is the UV coordinates of the n-th vertex. These shall\n\t\t// be linearly interpolated when splitting segments.\n\t\tthis._uv = uv;\n\n\t\t// A two-dimensional array of vertex coordinates, projected. Each\n\t\t// vertex is a two-element [x,y] array.\n\t\tthis._projVerts = verts.map(projector);\n\n\t\t// A two-dimensional array of triangle vertex IDs. Each triangle is a\n\t\t// three-element [v1,v2,v3] array.\n\t\t// The mesh is **expected** to be compact, planar, non-overlapping.\n\t\tthis._trigs = trigs;\n\n\t\t// A map of segments to vertices. Key is the segment index (generated inside\n\t\t// arrugator), value is an array of two vertex indices.\n\t\tthis._segs = [];\n\n\t\tthis._segCount = 0;\n\n\t\t// A map of segments to triangles. Key is the segment index (generated inside\n\t\t// arrugator), value is an array of triangle indices (all segments should\n\t\t// have either 1 or 2 triangles associated)\n\t\tthis._segTrigs = [];\n\n\t\t// A priority queue of segments, ordered by their epsilons, in descending order.\n\t\tthis._queue = new TinyQueue([], function (a, b) {\n\t\t\treturn b.epsilon - a.epsilon;\n\t\t});\n\n\t\t// A map of vertex indices to segment indices.\n\t\tthis._vertToSeg = new Array(verts.length);\n\t\tfor (let i in this._verts) {\n\t\t\tthis._vertToSeg[i] = [];\n\t\t}\n\t\t/// NOTE: Not using .fill([]), because that would use a reference to the *same*\n\t\t/// empty array for every element.\n\n\t\tfor (let t in this._trigs) {\n\t\t\tlet trig = this._trigs[t];\n\t\t\tlet v0 = trig[0];\n\t\t\tlet v1 = trig[1];\n\t\t\tlet v2 = trig[2];\n\t\t\tthis._segment(v0, v1, t);\n\t\t\tthis._segment(v1, v2, t);\n\t\t\tthis._segment(v2, v0, t);\n\t\t}\n\t}\n\n\t// Returns the segment index linking the two given vertex indices;\n\t// Must be passed a triangle index to use as context.\n\t// Might create a new segment index (as well as segment data structure and\n\t// entry in the priority queue).\n\t_segment(v1, v2, t, maxEpsilon = Infinity) {\n\t\tif (this._vertToSeg[v1] && this._vertToSeg[v1][v2] !== undefined) {\n\t\t\tconst found = this._vertToSeg[v1][v2];\n\n\t\t\tif (!this._segTrigs[found].includes(t)) {\n\t\t\t\tthis._segTrigs[found].push(t);\n\t\t\t}\n\n\t\t\treturn found;\n\t\t}\n\n\t\tconst segIdx = this._segCount++;\n\n\t\tthis._segs[segIdx] = [v1, v2];\n\t\tthis._vertToSeg[v1][v2] = segIdx;\n\t\tthis._vertToSeg[v2][v1] = segIdx;\n\t\tthis._segTrigs[segIdx] = [t];\n\n\t\t// Calculate segment epsilon\n\n\t\t// The \"epsilon\" of a segment is the square of the midpoint projection distance:\n\t\t// i.e. the square of the distance between:\n\t\t//  - the projected midpoint of the two vertices, and\n\t\t//  - the midpoint of the two projected vertices,\n\t\t// the distance function being euclidean distance in the \"destination\"\n\t\t// projection, squared.\n\n\t\tconst midpoint = [\n\t\t\t(this._verts[v1][0] + this._verts[v2][0]) / 2,\n\t\t\t(this._verts[v1][1] + this._verts[v2][1]) / 2,\n\t\t];\n\t\tconst projectedMid = this._projector(midpoint);\n\t\tconst midProjected = [\n\t\t\t(this._projVerts[v1][0] + this._projVerts[v2][0]) / 2,\n\t\t\t(this._projVerts[v1][1] + this._projVerts[v2][1]) / 2,\n\t\t];\n\n\t\tconst epsilon =\n\t\t\t(projectedMid[0] - midProjected[0]) ** 2 +\n\t\t\t(projectedMid[1] - midProjected[1]) ** 2;\n\n\t\tif (Number.isFinite(epsilon) && epsilon < maxEpsilon) {\n\t\t\tthis._queue.push({\n\t\t\t\tv1: v1,\n\t\t\t\tv2: v2,\n\t\t\t\tepsilon: epsilon,\n\t\t\t\tmidpoint: midpoint,\n\t\t\t\tprojectedMid: projectedMid,\n\t\t\t});\n\t\t}\n\n\t\treturn segIdx;\n\t}\n\n\t// Outputs shallow copies of some data structures at the current step.\n\toutput() {\n\t\t// Most data structs are 2-dimensional arrays, and doing a shallow copy\n\t\t// of the first level *should* just work.\n\t\treturn {\n\t\t\tunprojected: Array.from(this._verts),\n\t\t\tprojected: Array.from(this._projVerts),\n\t\t\tuv: Array.from(this._uv),\n\t\t\ttrigs: Array.from(this._trigs),\n\t\t};\n\t}\n\n\t#stepsWithSameEpsilon = 0;\n\n\t// Subdivides the mesh until the maximum segment epsilon is below the\n\t// given threshold.\n\t// The `targetEpsilon` parameter must be in the same units as the\n\t// internal epsilons: units of the projected CRS, **squared**.\n\tlowerEpsilon(targetEpsilon) {\n\t\tlet currentEpsilon = this._queue.peek().epsilon;\n\t\tlet lastEpsilon = currentEpsilon;\n\t\twhile ( currentEpsilon >= targetEpsilon) {\n\t\t\tthis.step();\n\n\t\t\tcurrentEpsilon = this._queue.peek().epsilon;\n\t\t\tif (currentEpsilon === lastEpsilon) {\n\t\t\t\tthis.#stepsWithSameEpsilon++;\n\t\t\t\tif (this.#stepsWithSameEpsilon < 500) {\n\t\t\t\t\tconsole.warn(\"Arrugator stopped due to epsilon stall. Raster may need hints for proper arrugation.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.#stepsWithSameEpsilon = 0;\n\t\t\t\tlastEpsilon = currentEpsilon;\n\t\t\t}\n\t\t}\n\t}\n\n\tget epsilon() {\n\t\treturn this._queue.peek().epsilon;\n\t}\n\n\tset epsilon(ep) {\n\t\treturn this.lowerEpsilon(ep);\n\t}\n\n\t// Triggers subdivision of the segment with the largest epsilon.\n\tstep() {\n\t\tconst seg = this._queue.pop();\n\t\treturn this.#splitSegment(seg, seg.epsilon);\n\t}\n\n\t// Triggers *one* subdivision of *all* segments in the queue.\n\t// Can be useful to run this prior to stepping, in order to overcome\n\t// artefacts\n\tforce() {\n\t\tconst segments = this._queue.data;\n\t\tthis._queue.data = [];\t// Empties the queue\n\t\tthis._queue.length = 0;\n\t\tsegments.forEach(seg=>this.#splitSegment(seg, Infinity));\n\t}\n\n\t// Splits the given segment.\n\t// This deletes the segment, spawns a new vertex at the midpoint, and\n\t// for each triangle the segment was originally a part of (either 1 or 2),\n\t// the triangle is divided into two.\n\t#splitSegment(seg, maxEpsilon) {\n\t\t// Which are the two vertices affected by the popped segment?\n\t\tconst v1 = seg.v1;\n\t\tconst v2 = seg.v2;\n\t\tconst s = this._vertToSeg[v1] && this._vertToSeg[v1][v2];\n\n\t\t// Which triangle(s) are affected by the popped segment?\n\t\tconst trigs = this._segTrigs[s];\n\n\t\t// Sanity check\n\t\tif (trigs.length >= 3) {\n\t\t\tthrow new Error(\"Somehow a segment is shared by three triangles\");\n\t\t}\n\n\t\t// Clean up refs\n\t\tdelete this._segTrigs[s];\n\t\tdelete this._segs[s];\n\t\tdelete this._vertToSeg[v1][v2];\n\t\tdelete this._vertToSeg[v2][v1];\n\n\t\t// What is the vertex ID of the new midpoint vertex?\n\t\tconst vm = this._verts.length;\n\n\t\tthis._projVerts[vm] = seg.projectedMid;\n\t\tthis._verts[vm] = seg.midpoint;\n\t\tthis._vertToSeg[vm] = [];\n\t\tthis._uv[vm] = [\n\t\t\t(this._uv[v1][0] + this._uv[v2][0]) / 2,\n\t\t\t(this._uv[v1][1] + this._uv[v2][1]) / 2,\n\t\t];\n\n\t\tfor (let t of trigs) {\n\t\t\tthis._splitTriangle(v1, v2, vm, t, maxEpsilon);\n\t\t}\n\t}\n\n\n\t// Split a triangle in two.\n\t// Must be given vertex indices of the segment being splitted, the index of the new\n\t// midpoint vertex, and the triangle index.\n\t// Shall silently drop any new segments with an epsilon larger than the\n\t// given one. This means that the segment shall be in the triangle mesh,\n\t// but will not be queued and therefore not subdivided ever.\n\t_splitTriangle(v1, v2, vm, t, epsilon = Infinity) {\n\t\tconst tvs = this._trigs[t];\n\n\t\tlet v3;\n\t\tlet winding = false;\n\t\t// Fetch the ID of the 3rd vertex in the original triangle, and the winding order\n\t\tif (tvs[0] === v1 && tvs[1] === v2) {\n\t\t\tv3 = tvs[2];\n\t\t\twinding = true; // A-B-C\n\t\t} else if (tvs[1] === v1 && tvs[2] === v2) {\n\t\t\tv3 = tvs[0];\n\t\t\twinding = true; // C-A-B\n\t\t} else if (tvs[2] === v1 && tvs[0] === v2) {\n\t\t\tv3 = tvs[1];\n\t\t\twinding = true; // B-C-A\n\t\t} else if (tvs[1] === v1 && tvs[0] === v2) {\n\t\t\tv3 = tvs[2];\n\t\t\twinding = false; // B-A-C\n\t\t} else if (tvs[2] === v1 && tvs[1] === v2) {\n\t\t\tv3 = tvs[0];\n\t\t\twinding = false; // C-B-A\n\t\t} else if (tvs[0] === v1 && tvs[2] === v2) {\n\t\t\tv3 = tvs[1];\n\t\t\twinding = false; // A-C-B\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t\"Data structure mishap: could not fetch 3rd vertex used in triangle\"\n\t\t\t);\n\t\t}\n\n\t\t// Index of the first \"half\" triangle will be the reused index of the original triangle\n\t\t// Index of the second \"half\" triangle must be allocated at the end of the triangles structure\n\t\tconst t2 = this._trigs.length;\n\n\t\tif (winding) {\n\t\t\tthis._trigs[t] = [v1, vm, v3];\n\t\t\tthis._trigs[t2] = [vm, v2, v3];\n\t\t} else {\n\t\t\tthis._trigs[t] = [vm, v1, v3];\n\t\t\tthis._trigs[t2] = [v2, vm, v3];\n\t\t}\n\n\t\t// Clean up references from old segments\n\t\tconst s1 = this._vertToSeg[v1] && this._vertToSeg[v1][v2];\n\t\tconst s2 = this._vertToSeg[v2] && this._vertToSeg[v2][v3];\n\t\tconst s3 = this._vertToSeg[v3] && this._vertToSeg[v3][v1];\n\n\t\tfunction filterTrig(i) {\n\t\t\treturn i !== t;\n\t\t}\n\n\t\tif (s1 !== undefined) {\n\t\t\tthis._segTrigs[s1] = this._segTrigs[s1].filter(filterTrig);\n\t\t}\n\t\tif (s2 !== undefined) {\n\t\t\tthis._segTrigs[s2] = this._segTrigs[s2].filter(filterTrig);\n\t\t}\n\t\tif (s3 !== undefined) {\n\t\t\tthis._segTrigs[s3] = this._segTrigs[s3].filter(filterTrig);\n\t\t}\n\n\t\tthis._segment(v1, vm, t, epsilon);\n\t\tthis._segment(vm, v3, t, epsilon);\n\t\tthis._segment(v3, v1, t, epsilon);\n\n\t\tthis._segment(v2, vm, t2, epsilon);\n\t\tthis._segment(vm, v3, t2, epsilon);\n\t\tthis._segment(v3, v2, t2, epsilon);\n\t}\n}\n","\nfunction clamp(n, min, max) {\n\treturn Math.max(min, Math.min(n, max));\n}\n\n\n/**\n * Utility function for creating a pre-split grid. This is meant for rasters\n * that span large areas, since they tend to be problematic on the poles and\n * antimeridian: cropping and pre-splitting these will alleviate artifacts.\n *\n * Input corners must be in the following order:\n * - Top-left\n * - Bottom-left\n * - Upper-right\n * - Lower-right\n *\n * This will generate subdivisions^2 quads as a result (or 2 * subdivisions^2\n * triangles). Default of 25 quads for 5 horizontal & vertical subdivisions.\n *\n */\n\nexport default function preSplitGrid(\n\tcorners,\n\tsubdivisions = 5,\n\tcropX = [-Infinity, +Infinity],\n\tcropY = [-Infinity, +Infinity]\n) {\n\n\tconst [[x1,y1],[x2,y2],[x3,y3],[x4,y4]] = corners;\n\n\tlet vertices = new Array(subdivisions ** 2);\n\tlet sourceUV = new Array(subdivisions ** 2);\n\n\tfor (let i=0; i<=subdivisions; i++) {\n\t\tconst pctY = i/subdivisions;\n\t\tconst pctY1 = 1 - pctY;\n\t\tfor (let j=0; j<=subdivisions; j++) {\n\t\t\tconst pctX = j/subdivisions;\n\t\t\tconst pctX1 = 1 - pctX;\n\n\t\t\tlet x =\n\t\t\t\t(x1 * pctX1 + x3 * pctX) * pctY1 +\n\t\t\t\t(x2 * pctX1 + x4 * pctX) * pctY ;\n\t\t\tlet y =\n\t\t\t\t(y1 * pctX1 + y3 * pctX) * pctY1 +\n\t\t\t\t(y2 * pctX1 + y4 * pctX) * pctY ;\n\n\t\t\tx = clamp(x, cropX[0], cropX[1]);\n\t\t\ty = clamp(y, cropY[0], cropY[1]);\n\t\t\tvertices[ i*(subdivisions+1)+j ] = [x,y];\n\t\t\tsourceUV[ i*(subdivisions+1)+j ] = [pctX, pctY];\n\t\t}\n\t}\n\n\t//trigs = [[0,1,3],[0,3,2]]\n\tlet trigs = new Array();\n\n\n\tfor (let i=0; i<subdivisions; i++) {\n\t\tconst offset1 = (i * (subdivisions+1));\n\t\tconst offset2 = ((i+1) * (subdivisions+1));\n\t\tfor (let j=0; j<subdivisions; j++) {\n\t\t\ttrigs.push([offset1 + j, offset1 + j + 1, offset2 + j]);\n\t\t\ttrigs.push([offset1 + j + 1, offset2+ j, offset2 + j + 1]);\n\t\t}\n\t}\n\n\treturn {vertices, sourceUV, trigs};\n}","// import { GLFactory as Glii } from \"glii\";\n\nimport { default as Glii } from \"glii/src/GliiFactory.mjs\";\nimport {} from \"glii/src/Texture.mjs\";\nimport {} from \"glii/src/Attribute/SingleAttribute.mjs\";\nimport {} from \"glii/src/Indices/IndexBuffer.mjs\";\nimport {} from \"glii/src/Program/WebGL1Program.mjs\";\n\nimport Arrugator from \"arrugator\";\nimport preSplitGrid from \"./preSplitGrid.mjs\";\n\n/**\n * @class L.ImageOverlay.Arrugator\n *\n * Displays reprojected raster images.\n *\n * Leverages Glii for not going insane with the WebGL bits, and Arrugator for\n * calculating the triangle mesh for raster reprojection.\n *\n */\n\nL.ImageOverlay.Arrugator = L.Layer.extend({\n\toptions: {\n\t\t// @option controlPoints: Array of Array of Number\n\t\t// An `Array` of four points, corresponding to the X-Y CRS coordinates\n\t\t// for the four corners of the raster.\n\t\t// The order must be: top-left, bottom-left, upper-right, lower-right\n\t\tcontrolPoints: undefined,\n\n\t\t// @option padding: Number = 0.1\n\t\t// How much to extend the clip area around the map view (relative to its size)\n\t\t// e.g. 0.1 would be 10% of map view in each direction\n\t\tpadding: 0.1,\n\n\t\t// @option epsilon: Number = 1000000\n\t\t// Target epsilon for the Arrugator triangle subdivision. Should be equal to the\n\t\t// *square* of the maximum error, in projected map units. The default equals\n\t\t// 1000 map units.\n\t\tepsilon: 1000000,\n\n\t\t// @option fragmentShader: String = \"void main() { gl_FragColor = texture2D(uRaster, vUV); }\"\n\t\t// A `String` containing the WebGL fragment shader to be used. The default\n\t\t// just samples the predefined `uRaster` texture with the predefined `vUV`\n\t\t// `vec2` varying.\n\t\t//\n\t\t// Do not change the default unless you know what a fragment shader is.\n\t\tfragmentShader: \"void main() { gl_FragColor = texture2D(uRaster, vUV); }\",\n\n\t\t// @option subdivisions: Number = 1\n\t\t// Before arrugating the raster, it will be split into this many horizontal\n\t\t// & vertical subdivisions. The default of one subdivision (i.e. one quad,\n\t\t// two triangles) will work for rasters which cover a small area, but\n\t\t// rasters covering large swaths can display projection artifacts\n\t\t// unless they're split beforehand.\n\t\tsubdivisions: 1,\n\n\t\t// @option cropX: Number = [-Infinity, Infinity]\n\t\t// The horizontal component of the input coordinates will be cropped\n\t\t// between these values.\n\t\tcropX: [-Infinity, Infinity],\n\n\t\t// @option cropX: Number = [-Infinity, Infinity]\n\t\t// The vertical component of the input coordinates will be cropped\n\t\t// between these values.\n\t\t//\n\t\t// This is meant to prevent projection artifacts near the poles.\n\t\t// When projecting from EPSG:4326 into EPSG:3857, it is recommended to\n\t\t// crop vertically between [-89, +89].\n\t\tcropY: [-Infinity, Infinity],\n\n\t\tmap: undefined,\n\t\topacity: undefined,\n\t\tmyCanvas: undefined\n\t},\n\n\tinitialize: function initialize(url, opts) {\n\t\tthis._reactLeafletMap = this._map || opts.map;\n\n\t\tif (opts.myCanvas) {\n\t\t\tthis._myCanvas = opts.myCanvas;\n\t\t}\n\n\t\tif (!this._reactLeafletMap ||!this._reactLeafletMap instanceof L.Map) {\n\t\t\tthrow new Error(\"A L.ImageOverlay.Arrugator needs a fully setup map container\");\n\t\t}\n\t\tthis._src = url;\n\n\t\t// @option controlPoints: Array of Array of Number\n\t\t// An array of four pairs of coordinates,\n\t\tthis._controlPoints = opts.controlPoints;\n\t\tif (!(this._controlPoints instanceof Array) || this._controlPoints.length !== 4) {\n\t\t\tthrow new Error(\n\t\t\t\t\"A L.ImageOverlay.Arrugator needs a 'controlPoints' option, which must be an array of four coordinates\"\n\t\t\t);\n\t\t}\n\n\t\t// @option projector: Function\n\t\t// A `Function` that should take an `Array` of two numbers (coordinates in the\n\t\t// raster's original projection) and return an `Array` of two numbers\n\t\t// (coordinates in the Leaflet display projection).\n\t\t//\n\t\t// Typically this should be a proj4 forward projection function, like\n\t\t// `proj4(srcCRS, displayCRS).forward`\n\t\t//\n\t\t// It's up to the developer to ensure that the projector function is the adequate\n\t\t// for the CRSs.\n\t\tthis._projector = opts.projector;\n\t\tif (!(this._projector instanceof Function)) {\n\t\t\tthrow new Error(\n\t\t\t\t\"A L.ImageOverlay.Arrugator needs a 'projector' option, which must be function for projecting coordinate pairs\"\n\t\t\t);\n\t\t}\n\n\t\tL.Util.setOptions(this, opts);\n\t},\n\n\tonAdd: function onAdd() {\n\t\tif (!this._container) {\n\t\t\tthis._initContainer();\n\n\t\t\tif (this._zoomAnimated) {\n\t\t\t\tL.DomUtil.addClass(this._container, \"leaflet-zoom-animated\");\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.opacity) {\n\t\t\tL.DomUtil.setOpacity(this._container, this.options.opacity);\n\t\t}\n\n\t\tthis.getPane().appendChild(this._container);\n\t\tthis._reset();\n\t},\n\n\tonRemove: function onRemove() {\n\t\tthis._destroyContainer();\n\t},\n\n\tgetEvents: L.Renderer.prototype.getEvents,\n\t// \t_onAnimZoom: L.Renderer.prototype._onAnimZoom,\n\t_onAnimZoom: function (ev) {\n\t\tthis._updateTransform(ev.center, ev.zoom);\n\t\tthis._redraw();\n\t},\n\t// \t_onZoom: L.Renderer.prototype._onZoom,\n\t_onZoom: function (ev) {\n\t\tthis._update();\n\t},\n\t_onZoomEnd: L.Util.falseFn,\n\t_updateTransform: L.Renderer.prototype._updateTransform,\n\n\t_initContainer: function _initContainer() {\n\t\tthis._container = this._myCanvas || document.createElement(\"canvas\");\n\n\t\tconst glii = (this._glii = new Glii(this._container, {\n\t\t\tpreMultipliedAlpha: false,\n\t\t}));\n\n\t\tconst rasterTexture = new glii.Texture({\n\t\t\tminFilter: glii.LINEAR,\n\t\t\tmaxFilter: glii.LINEAR,\n\t\t});\n\t\tconst rasterImage = new Image();\n\t\trasterImage.onload = () => {\n\t\t\trasterTexture.texImage2D(rasterImage);\n\t\t\tthis.fire(\"load\");\n\t\t\tthis._redraw();\n\t\t};\n\n\t\trasterImage.src = this._src;\n\n\t\tconst {\n\t\t\tvertices,\n\t\t\tsourceUV,\n\t\t\ttrigs: inputTrigs,\n\t\t} = preSplitGrid(\n\t\t\tthis._controlPoints,\n\t\t\tthis.options.subdivisions,\n\t\t\tthis.options.cropX,\n\t\t\tthis.options.cropY\n\t\t);\n\n\t\tthis._arrugator = new Arrugator(this._projector, vertices, sourceUV, inputTrigs);\n\n\t\tthis._arrugator.lowerEpsilon(this.options.epsilon);\n\n\t\tlet arrugado = this._arrugator.output();\n\n\t\tconst pos = new glii.SingleAttribute({\n\t\t\tglslType: \"vec2\",\n\t\t\tsize: arrugado.projected.length,\n\t\t\tgrowFactor: false,\n\t\t});\n\t\tconst uv = new glii.SingleAttribute({\n\t\t\tglslType: \"vec2\",\n\t\t\tsize: arrugado.uv.length,\n\t\t\tgrowFactor: false,\n\t\t});\n\t\tconst trigs = (this._trigs = new glii.IndexBuffer({\n\t\t\tsize: arrugado.trigs.length * 3,\n\t\t\tgrowFactor: false,\n\t\t}));\n\n\t\tconst unprojectedDataBounds = L.bounds(arrugado.projected);\n\t\tthis._dataBounds = L.latLngBounds([\n\t\t\tthis._reactLeafletMap.options.crs.projection.unproject(unprojectedDataBounds.min),\n\t\t\tthis._reactLeafletMap.options.crs.projection.unproject(unprojectedDataBounds.max),\n\t\t]);\n\n\t\tpos.setBytes(0, 0, Float32Array.from(arrugado.projected.flat()));\n\t\tuv.setBytes(0, 0, Float32Array.from(arrugado.uv.flat()));\n\t\ttrigs.set(0, arrugado.trigs.flat());\n\n\t\tthis._program = new glii.WebGL1Program({\n\t\t\tvertexShaderSource: `\nvoid main() {\n\tgl_Position = vec4(\n\t\t(aPos.xy - uCenter) / vec2(uScale),\n\t\t1.0,\n\t\t1.0\n\t);\n\tvUV = aUV;\n}`,\n\t\t\tvaryings: { vUV: \"vec2\" },\n\t\t\tfragmentShaderSource: this.options.fragmentShader,\n\t\t\tindexBuffer: this._trigs,\n\t\t\tattributes: {\n\t\t\t\taPos: pos,\n\t\t\t\taUV: uv,\n\t\t\t},\n\t\t\ttextures: {\n\t\t\t\tuRaster: rasterTexture,\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tuCenter: \"vec2\",\n\t\t\t\tuScale: \"vec2\",\n\t\t\t},\n\t\t});\n\t},\n\n\t_destroyContainer: function _destroyContainer() {\n\t\tdelete this._glii;\n\t\tL.DomUtil.remove(this._container);\n\t\tL.DomEvent.off(this._container);\n\t\tdelete this._container;\n\t},\n\n\t_redraw: function _redraw() {\t\t\n\t\tif (this._container === undefined) this._myCanvas;\n\n\t\tvar crs = this._reactLeafletMap.options.crs,\n\t\t\tprojcenter = crs.project(this._center),\n\t\t\tmapPxSize = this._bounds.getSize(),\n\t\t\tscale = mapPxSize.divideBy(crs.scale(this._zoom) / 20037508);\n\t\tthis._program.setUniform(\"uCenter\", [projcenter.x, projcenter.y]);\n\t\tthis._program.setUniform(\"uScale\", [scale.x, scale.y]);\n\t\tthis._program.run();\n\t},\n\n\t_update: function _update() {\n\t\tif (this._reactLeafletMap._animatingZoom && this._bounds) {\n\t\t\treturn;\n\t\t}\n\t\tL.Renderer.prototype._update.call(this);\n\n\t\tthis._center = this._reactLeafletMap.getCenter();\n\t\tthis._zoom = this._reactLeafletMap.getZoom();\n\n\t\tlet m = L.Browser.retina ? 2 : 1,\n\t\t\tmapPxSize = this._bounds.getSize();\n\t\t// \t\t    mapPxSize = this._map.getSize();\n\n\t\tthis._container.width = /*m * */ mapPxSize.x;\n\t\tthis._container.height = /*m * */ mapPxSize.y;\n\t\tconsole.log('container width : ' + this._container.width);\n\t\tconsole.log('container height : ' + this._container.height);\n\t\tL.DomUtil.setPosition(this._container, this._bounds.min);\n\n\t\tconsole.log('redraw called from update');\n\t\tthis._redraw();\n\t},\n\n\t_reset: function () {\n\t\tthis._update();\n\t\tthis._updateTransform(this._center, this._zoom);\n\t},\n\n\tgetBounds: function getBounds() {\n\t\treturn this._dataBounds;\n\t}\n\n});\n\nL.imageOverlay.arrugator = function arrugator(url, opts) {\n\treturn new L.ImageOverlay.Arrugator(url, opts);\n};\n"],"names":["Glii"],"mappings":"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"}